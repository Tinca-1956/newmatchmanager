rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a site admin
    function isSiteAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Site Admin';
    }

    // Helper function to check if a user is an admin of a specific club
    function isClubAdmin(userId, clubId) {
      let user = get(/databases/$(database)/documents/users/$(userId)).data;
      return user.role == 'Club Admin' && user.primaryClubId == clubId;
    }
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read their own profile
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      // Allow Club Admins to update users in their own club
      allow update: if isClubAdmin(request.auth.uid, resource.data.primaryClubId) || isSiteAdmin(request.auth.uid);
    }
    
    // Allow authenticated users to read clubs, series, and matches
    match /clubs/{clubId} {
      allow read: if request.auth != null;
    }

    match /series/{seriesId} {
      allow read: if request.auth != null;
    }

    match /matches/{matchId} {
      allow read: if request.auth != null;
    }
    
    match /results/{resultId} {
        allow read: if request.auth != null;
    }

    // Public collections are readable by anyone
    match /publicMatches/{matchId} {
      allow read: if true;
      // Allow write if the user is a Site Admin OR a Club Admin for the match's club
      allow write: if isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, request.resource.data.clubId);
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
    }
  }
}
