
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isSiteAdmin() {
      // Check for Site Admin role in the user's document
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    function isClubAdmin() {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if request.auth.uid == userId || isSiteAdmin();
      allow delete: if isSiteAdmin();
    }
    
    // Rules for 'clubs' collection
    match /clubs/{clubId} {
        allow read: if isSignedIn();
        allow create, delete: if isSiteAdmin();
        allow update: if isSiteAdmin() || (isClubAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId);
    }
    
    // Rules for 'series' collection
     match /series/{seriesId} {
      allow read: if isSignedIn();
      allow write: if isSiteAdmin() || (isClubAdmin() && request.resource.data.clubId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId);
    }
    
    // Rules for 'matches' collection
    match /matches/{matchId} {
      allow read: if isSignedIn();

      // Rule for create: Check the incoming document's clubId against the user's primaryClubId
      allow create: if isSiteAdmin() || (isClubAdmin() &&
        request.resource.data.clubId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId);

      // Rule for update/delete: Check the existing document's clubId against the user's primaryClubId
      allow update, delete: if isSiteAdmin() || (isClubAdmin() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId);
    }
    
    // Rules for 'results' collection
    match /results/{resultId} {
        allow read: if isSignedIn();
        allow write: if isSiteAdmin() || isClubAdmin();
    }
    
    // Rules for 'helpDocuments' collection
    match /helpDocuments/{docId} {
      allow read: if isSignedIn();
      allow write: if isSiteAdmin();
    }
    
    // Rules for 'Standard_Texts' collection
    match /Standard_Texts/{textId} {
        allow read: if isSignedIn();
        allow write: if isSiteAdmin() || (isClubAdmin() && request.resource.data.clubId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId);
    }

    // Rules for public-facing collections
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Should only be written to by admin SDK
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Should only be written to by admin SDK
    }
  }
}
