rules_version = '2';

// Helper functions to check user roles
function isSiteAdmin(userId) {
  return exists(/databases/$(database)/documents/users/$(userId)) &&
         get(/databases/$(database)/documents/users/$(userId)).data.role == 'Site Admin';
}

function isClubAdmin(userId, clubId) {
  return exists(/databases/$(database)/documents/users/$(userId)) &&
         get(/databases/$(database)/documents/users/$(userId)).data.role == 'Club Admin' &&
         get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId == clubId;
}

function isClubAdminOfAnyClub(userId) {
  return exists(/databases/$(database)/documents/users/$(userId)) &&
         get(/databases/$(database)/documents/users/$(userId)).data.role == 'Club Admin';
}

function isMemberOfClub(userId, clubId) {
    return exists(/databases/$(database)/documents/users/$(userId)) &&
         get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId == clubId &&
         get(/databases/$(database)/documents/users/$(userId)).data.memberStatus == 'Member';
}

service cloud.firestore {
  match /databases/{database}/documents {
    
    // USERS:
    // - Authenticated users can read their own profile.
    // - Authenticated users can update their own name and primary club.
    // - Site Admins can read/write any user profile.
    // - Club Admins can read/write profiles of users in their club.
    match /users/{userId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || isSiteAdmin(request.auth.uid) || isClubAdminOfAnyClub(request.auth.uid));
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                       (request.auth.uid == userId || isSiteAdmin(request.auth.uid) || 
                        (isClubAdmin(request.auth.uid, resource.data.primaryClubId) && 
                         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'memberStatus']))
                       );
      allow delete: if isSiteAdmin(request.auth.uid);
    }
    
    // CLUBS:
    // - Authenticated users can read all club details.
    // - Site Admins can create/update/delete any club.
    // - Club Admins can update their own club's details (e.g., description, image).
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create, delete: if isSiteAdmin(request.auth.uid);
      allow update: if isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, clubId);
    }
    
    // SERIES:
    // - Authenticated users can read all series.
    // - Site Admins or Club Admins of the respective club can create/update/delete.
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, request.resource.data.clubId);
    }
    
    // MATCHES:
    // - Authenticated users can read all matches for any club.
    // - Site Admins or Club Admins of the respective club can create/update/delete.
    // - Authenticated users can register/unregister by updating the `registeredAnglers` array if they are a member of the club.
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create, delete: if isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, request.resource.data.clubId);
      // Allow general updates by admins, and specific updates for registration by members.
      allow update: if isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId) ||
                     (isMemberOfClub(request.auth.uid, resource.data.clubId) && 
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']));
    }
    
    // RESULTS:
    // - Authenticated users can read all results.
    // - Only Site Admins or Club Admins of the respective club can create/update/delete results.
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, request.resource.data.clubId);
    }

    // HELP DOCUMENTS:
    // - All users can read.
    // - Only Site Admins can write/delete.
    match /helpDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin(request.auth.uid);
    }

     // PUBLIC MATCHES (for public dashboard results)
    // - World-readable.
    // - Only writable by admins via server-side logic (e.g., a function).
    match /publicMatches/{matchId} {
      allow read;
      allow write: if false; // Prevent client-side writes
    }

    // PUBLIC UPCOMING MATCHES (for public dashboard schedule)
    // - World-readable.
    // - Only writable by admins via server-side logic.
    match /publicUpcomingMatches/{matchId} {
      allow read;
      allow write: if false; // Prevent client-side writes
    }
  }
}
