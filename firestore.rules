rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // PUBLIC collections
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Only written from server-side
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Only written from server-side
    }

    // SECURED collections
    match /users/{userId} {
      allow read: if isAuth(); // Any authenticated user can read user profiles
      allow create: if isAuth() && isOwner(userId);
      allow update: if isAuth() && isOwner(userId);
      allow delete: if false; // Users cannot delete their own accounts
    }
    
    match /clubs/{clubId} {
        allow read: if isAuth();
        allow create, update, delete: if false; // Admin only from backend
    }
    
    match /series/{seriesId} {
        allow read: if isAuth();
        allow create, update, delete: if false; // Admin only from backend
    }
    
    match /matches/{matchId} {
        allow read: if isAuth();
        allow create, update, delete: if false; // Admin only from backend
    }
    
    match /results/{resultId} {
        allow read: if isAuth();
        allow create, update, delete: if false; // Admin only from backend
    }

    match /helpDocuments/{docId} {
        allow read: if isAuth();
        allow create, update, delete: if false; // Admin only
    }
  }
}
