rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isClubOrSiteAdmin() {
      let role = getUserData().role;
      return role == 'Site Admin' || role == 'Club Admin';
    }

    function isClubMember(clubId) {
      return getUserData().primaryClubId == clubId && getUserData().memberStatus == 'Member';
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can manage their own profile
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isAuthenticated();
      allow list: if isClubOrSiteAdmin();
    }
    
    // Clubs can be read by any authenticated user, but only written by admins.
    match /clubs/{clubId} {
      allow read: if isAuthenticated();
      allow write: if isClubOrSiteAdmin();
    }

    // Series can be read by authenticated members of the club, written by admins.
    match /series/{seriesId} {
      allow read: if isAuthenticated();
      allow write: if isClubOrSiteAdmin();
    }

    // Matches can be read by authenticated members of that club, written by admins.
    match /matches/{matchId} {
      allow read: if isAuthenticated();
      allow write: if isClubOrSiteAdmin();
    }
    
    // Match results can be read by authenticated members, written by admins.
    match /results/{resultId} {
       allow read: if isAuthenticated();
       allow write: if isClubOrSiteAdmin();
    }

    // Blog posts can be read by authenticated users, written by admins.
    match /blogs/{blogId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isClubOrSiteAdmin();
      
      // Comments can be read by any authenticated user.
      // Can be created by members of the club the blog post belongs to.
      match /comments/{commentId} {
        allow read: if isAuthenticated();
        allow create: if isClubMember(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
        allow delete: if isClubOrSiteAdmin() || isOwner(resource.data.authorId);
      }
    }

    // Notifications are private to the user
    match /notifications/{notificationId} {
        allow read, write: if isOwner(resource.data.userId);
    }
    
    match /matchReviews/{reviewId} {
        allow read: if isAuthenticated();
        allow write: if isClubOrSiteAdmin();

        match /comments/{commentId} {
            allow read: if isAuthenticated();
            allow create: if isAuthenticated();
            allow delete: if isClubOrSiteAdmin() || isOwner(resource.data.authorId);
        }
    }
    
    match /Standard_Texts/{textId} {
        allow read: if isAuthenticated();
        allow write: if isClubOrSiteAdmin();
    }

    // Public collections are world-readable, but admin-writable.
    match /publicBlogPosts/{postId} {
        allow read: if true;
        allow write: if isClubOrSiteAdmin();
    }

    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if isClubOrSiteAdmin();
    }
     match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if isClubOrSiteAdmin();
    }
    
    match /helpDocuments/{docId} {
      allow read: if isAuthenticated();
      allow write: if isClubOrSiteAdmin();
    }
  }
}
