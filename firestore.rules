
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdminOf(clubId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'Club Admin' && user.primaryClubId == clubId;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for Collections
    match /users/{userId} {
      // Site Admins can do anything.
      // Users can read their own profile.
      // Users in the same club can read each other's profiles (for angler lists).
      allow read: if isSiteAdmin() || 
                    (isSignedIn() && request.auth.uid == userId) ||
                    (isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.primaryClubId);

      // Users can update their own name and primary club.
      // Admins can update status and roles.
      allow update: if (isSignedIn() && request.auth.uid == userId) || isSiteAdmin() || isClubAdminOf(resource.data.primaryClubId);
      
      allow create: if isSiteAdmin();
      allow delete: if isSiteAdmin();
    }

    match /{collection}/{docId} {
      // Default allow read for signed-in users on most collections.
      // This covers clubs, series, matches, results.
      allow read: if isSignedIn();

      // Default allow write for Admins on most collections.
      // `request.resource.data.clubId` is used because it's the common field.
      allow write: if isSiteAdmin() || 
                     (resource.data.keys().has('clubId') && isClubAdminOf(request.resource.data.clubId));
    }

    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin() || 
                     (resource.data.keys().has('clubId') && isClubAdminOf(request.resource.data.clubId));
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin() || 
                     (resource.data.keys().has('clubId') && isClubAdminOf(request.resource.data.clubId));
    }
  }
}
