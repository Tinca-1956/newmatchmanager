
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      // Check the user's custom claim against the clubId of the resource they are trying to access.
      // This is a placeholder, as the primaryClubId from the user's doc is more reliable.
      return request.auth.token.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    function isUser(userId) {
        return request.auth.uid == userId;
    }
    
    // Check if the requesting user belongs to the same club as the resource being accessed.
    function isSameClub(clubId) {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    // Users Collection
    match /users/{userId} {
      // ANY logged in user can create their own user document.
      allow create: if request.auth != null;

      // Read access:
      // 1. A Site Admin can read any user document or list.
      // 2. A user can read a list of other users if they are querying for a specific club.
      // 3. A user can always read their own document.
      allow read: if isSiteAdmin() || 
                   (request.query.get('where').get('primaryClubId') != null) ||
                   isUser(userId);

      // Update access:
      // A user can update their own document. A site admin can update any document.
      allow update: if isUser(userId) || isSiteAdmin();
      
      // Delete access:
      // Only Site Admins can delete user documents.
      allow delete: if isSiteAdmin();
    }
    
    // Clubs Collection
    match /clubs/{clubId} {
      // Any authenticated user can read club information.
      allow read: if request.auth != null;
      // Only Site Admins can create, update, or delete clubs.
      allow write: if isSiteAdmin();
    }
    
    // Series Collection
    match /series/{seriesId} {
        // Users can read series if they belong to that club.
        allow read: if request.auth != null;
        // Only admins of that club can write to it.
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    // Matches Collection
    match /matches/{matchId} {
      // Any authenticated user can read matches. The UI filters by club.
      allow read: if request.auth != null;
      // Admins can create/update matches for their club. Site admins can do anything.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    // Results Collection
    match /results/{resultId} {
        // Users can read results if they belong to that club.
        allow read: if isSameClub(resource.data.clubId);
        // Only admins can write results.
        allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    // Public Matches Collection (for the public dashboard)
    match /publicMatches/{matchId} {
        // Anyone can read from this collection, even without being logged in.
        allow get: if true;
        allow list: if true;

        // No one can write directly to this collection. It's populated by the "Publish" action.
        allow write: if request.auth != null && (isSiteAdmin() || isClubAdmin(request.resource.data.clubId));
    }
  }
}
