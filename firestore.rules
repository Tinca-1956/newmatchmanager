
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }

    // Checks if the requesting user is a Club Admin for the specified clubId
    function isClubAdmin(clubId) {
      // Ensure the user document exists before trying to read from it.
      let userDocExists = exists(/databases/$(database)/documents/users/$(request.auth.uid));
      return isUserAuthenticated() &&
             userDocExists &&
             request.auth.token.role == 'Club Admin' && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }
    
    // Checks if the user is a member of the club specified in the resource's data.
    function isMemberOfClub(clubId) {
       return isUserAuthenticated() && 
              exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }


    // --- Collection Rules ---

    match /users/{userId} {
      // Create: Anyone can create their own user document.
      allow create: if isUserAuthenticated();
      
      // Read: Site Admins can read any user. Authenticated users can read profiles from their own club or their own profile.
      allow read: if isSiteAdmin() || 
                  (isUserAuthenticated() && request.auth.uid == userId) ||
                  (isUserAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.primaryClubId);

      // Update: A user can update their own profile. Site/Club Admins can update profiles in their jurisdiction.
      allow update: if (isUserAuthenticated() && request.auth.uid == userId) || 
                   isSiteAdmin() ||
                   isClubAdmin(resource.data.primaryClubId);
                   
      // Delete: Only a Site Admin can delete user documents.
      allow delete: if isSiteAdmin();
    }

    match /clubs/{clubId} {
      // Write: Only Site Admins can manage clubs.
      allow write: if isSiteAdmin();
      // Read: Any authenticated user can read the list of clubs.
      allow read: if isUserAuthenticated();
    }
    
    match /series/{seriesId} {
      // Read: Site Admins can read all. Others can read if they are a member of the club.
      allow read: if isSiteAdmin() || isMemberOfClub(resource.data.clubId);
      // Write: Only Site or Club Admins can write series data.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /matches/{matchId} {
      // Read: Site Admins can read all. Others can read if they are a member of the club.
      allow read: if isSiteAdmin() || isMemberOfClub(resource.data.clubId);
      // Write: Only Site or Club Admins can write match data.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /results/{resultId} {
      // Read: Site Admins can read all. Others can read if they are a member of the club.
      allow read: if isSiteAdmin() || isMemberOfClub(resource.data.clubId);
      // Write: Site/Club Admins or Marshals can write results.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId) || request.auth.token.role == 'Marshal';
    }

    match /applications/{applicationId} {
      // Read: Site Admins or the Club Admin of the target club can read.
      allow read: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
      // Create: Any authenticated user can create an application for themselves.
      allow create: if isUserAuthenticated() && request.auth.uid == request.resource.data.userId;
      // Delete: Only an admin of that club or a site admin can delete an application.
      allow delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /memberships/{membershipId} {
      // Read: Any authenticated user can read any membership record.
      allow read: if isUserAuthenticated();
      // Write: Site Admins or Club Admins can create membership records.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
  }
}
