
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // UTILITY: Read own user document
    function isSignedIn() {
      return request.auth != null;
    }
    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // UTILITY: Check user role from custom claims
    function getRole() {
      return request.auth.token.role;
    }
    function isSiteAdmin() {
      return isSignedIn() && getRole() == 'Site Admin';
    }
    function isClubAdmin(clubId) {
      // Club Admins can manage their own club's data.
      // This function checks if the user is an admin of the specified club.
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return isSignedIn() && getRole() == 'Club Admin' && userDoc.primaryClubId == clubId;
    }
    function isMarshal(clubId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return isSignedIn() && getRole() == 'Marshal' && userDoc.primaryClubId == clubId;
    }


    //================================================================================
    // PUBLIC COLLECTIONS
    // These collections are readable by anyone, even unauthenticated users.
    // They should only contain safe, public-facing data.
    //================================================================================
    match /clubs/{clubId} {
      allow read: if true;
      allow write: if isSiteAdmin();
    }

    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    

    //================================================================================
    // AUTHENTICATED-ONLY COLLECTIONS
    //================================================================================
    match /users/{userId} {
      allow read: if isUser(userId) || isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId);
      allow create: if isSignedIn(); // Allow any authenticated user to create their own user document
      allow update: if isUser(userId) || isSiteAdmin() || isClubAdmin(resource.data.primaryClubId);
      allow delete: if isSiteAdmin();
      
      // SiteAdmins can list all users
      allow list: if isSiteAdmin();
    }

    match /series/{seriesId} {
      allow read, write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
      allow list: if isSiteAdmin() || isClubAdmin(request.query.clubId);
    }

    match /matches/{matchId} {
      // Let any signed-in user read any match. More specific write rules below.
      allow read: if isSignedIn();
      // Allow list for a specific club
      allow list: if isSignedIn();
      // Only Site Admins or admins of the club can create/update/delete matches
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /results/{resultId} {
      allow read, write: if isSignedIn();
    }
  }
}
