
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Site Admin or Club Admin roles
    function isClubAdmin(clubId) {
      let userProfile = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null && (
        'Site Admin' in userProfile.role ||
        ('Club Admin' in userProfile.role && userProfile.primaryClubId == clubId)
      );
    }
    
    function isSiteAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isSiteAdmin();
      allow delete: if isSiteAdmin();
    }

    match /clubs/{clubId} {
        allow read: if request.auth != null;
        allow write: if isSiteAdmin() || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId);
        allow delete: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow create: if isClubAdmin(request.resource.data.clubId);
      allow update: if isClubAdmin(resource.data.clubId);
      allow delete: if isClubAdmin(resource.data.clubId);
    }
    
     match /matches/{matchId} {
      allow read: if request.auth.uid != null;
      allow create: if isClubAdmin(request.resource.data.clubId);
      // Let Club Admins or Site Admins update their club's matches
      allow update: if isClubAdmin(resource.data.clubId);
      allow delete: if isClubAdmin(resource.data.clubId);
    }

    match /results/{resultId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    match /blogs/{postId} {
      allow read: if request.auth.uid != null;
      allow write: if isClubAdmin(request.resource.data.clubId);
      allow create: if isClubAdmin(request.resource.data.clubId);

      match /comments/{commentId} {
        allow read: if request.auth.uid != null;
        allow create: if request.resource.data.authorId == request.auth.uid &&
                         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == get(/databases/$(database)/documents/blogs/$(postId)).data.clubId;
      }
    }

     match /notifications/{notificationId} {
        allow read: if request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid != null; // Server-side logic should validate who can create what
        allow update: if request.auth.uid == resource.data.userId; // User can update their own notifications (e.g., mark as read)
        allow delete: if request.auth.uid == resource.data.userId;
    }
    
    match /helpDocuments/{docId} {
        allow read: if request.auth.uid != null;
        allow write: if isSiteAdmin();
    }

     match /Standard_Texts/{textId} {
        allow read, write: if isSiteAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId;
    }
    
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false;
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if false;
    }

    match /tags/{tagId} {
        allow read: if request.auth.uid != null;
        allow write: if isClubAdmin(request.resource.data.clubId);
    }
  }
}
