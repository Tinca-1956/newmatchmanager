
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }
    
    function isMemberOf(clubId) {
      // Check if the user document exists and has a matching primaryClubId
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }
    
    function isClubAdminOf(clubId) {
      return isMemberOf(clubId) && request.auth.token.role == 'Club Admin';
    }

    match /matches/{matchId} {
      allow read: if request.auth != null && (isSiteAdmin() || isMemberOf(resource.data.clubId));
      allow write: if request.auth != null && (isSiteAdmin() || isClubAdminOf(request.resource.data.clubId));
    }
    
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isSiteAdmin();
    }
    
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId || isSiteAdmin() || isClubAdminOf(get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId);
      allow delete: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
       allow read: if request.auth != null && (isSiteAdmin() || isMemberOf(resource.data.clubId));
       allow write: if request.auth != null && (isSiteAdmin() || isClubAdminOf(request.resource.data.clubId));
    }
    
    match /results/{resultId} {
        allow read: if request.auth != null && (isSiteAdmin() || isMemberOf(resource.data.clubId));
        allow write: if request.auth != null && (isSiteAdmin() || isClubAdminOf(request.resource.data.clubId));
    }
  }
}
