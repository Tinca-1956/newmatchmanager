rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is a site admin
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    // Helper function to check if the user is a club admin for a given club
    function isClubAdmin(clubId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'Club Admin' && userDoc.primaryClubId == clubId;
    }
    
    // PUBLIC-READABLE COLLECTIONS
    // =============================
    // These collections need to be readable by anyone, including unauthenticated users,
    // for the public-facing dashboard and pages to work.
    
    match /clubs/{clubId} {
      // Anyone can read the list of clubs for filtering.
      // Only Site Admins can create, update, or delete clubs.
      allow list: if true;
      allow get: if request.auth != null;
      allow write: if isSiteAdmin();
    }

    match /publicUpcomingMatches/{matchId} {
        // Anyone can read upcoming matches for the public dashboard.
        // Writes are handled by trusted server-side logic (e.g., Cloud Functions).
        allow read: if true;
        allow write: if false; // Or restricted to a specific service account
    }

    match /publicMatches/{matchId} {
        // Anyone can read completed match results for the public dashboard.
        // Writes are handled by trusted server-side logic.
        allow read: if true;
        allow write: if false;
    }

    // AUTHENTICATED-ONLY COLLECTIONS
    // =================================
    // Users must be logged in to interact with these collections.

    match /users/{userId} {
      // A user can get their own document.
      allow get: if request.auth.uid == userId;
      // A user can create their own user document upon registration.
      allow create: if request.auth.uid == userId;
      // A user can update their own profile information.
      allow update: if request.auth.uid == userId;
      // Only Site Admins can delete user documents.
      allow delete: if isSiteAdmin();
      // Admins can list all users. Regular users cannot.
      allow list: if isSiteAdmin() || isClubAdmin(request.query.primaryClubId);
    }
    
    match /series/{seriesId} {
        // Any authenticated user can read series information.
        // Write access is restricted to admins.
        allow read: if request.auth != null;
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    match /matches/{matchId} {
        // Any authenticated user can read match information.
        // Write access is restricted to admins.
        allow read: if request.auth != null;
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    match /results/{resultId} {
        // Any authenticated user can read results.
        // Write access is restricted to admins or marshals for the relevant club.
        allow read: if request.auth != null;
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
  }
}
