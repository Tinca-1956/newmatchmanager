rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isSiteAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin() {
        return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }
    
    function isOwner(userId) {
        return isAuth() && request.auth.uid == userId;
    }

    // Rules for 'clubs' collection
    match /clubs/{clubId} {
      allow read: if true;
      allow create: if isSiteAdmin();
      allow update: if isSiteAdmin() || (isClubAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId);
      allow delete: if isSiteAdmin();
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isSiteAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.primaryClubId;
      allow create: if isAuth(); // Allow any authenticated user to create their own user doc.
      allow update: if isOwner(userId) || isSiteAdmin();
      allow list: if isSiteAdmin() || (isClubAdmin() && request.query.where.primaryClubId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId);
    }
    
    // Rules for 'series' collection
    match /series/{seriesId} {
        allow read: if isAuth();
        allow list: if isAuth();
        allow create, update, delete: if isSiteAdmin() || isClubAdmin();
    }

    // Rules for 'matches' collection
    match /matches/{matchId} {
      allow read: if isAuth();
      allow create, update, delete: if isSiteAdmin() || isClubAdmin();
      allow list: if isAuth(); // Should be constrained further by query
    }
    
    // Rules for 'results' collection
    match /results/{resultId} {
        allow read: if isAuth();
        allow list: if isAuth();
        allow create, update, delete: if isSiteAdmin() || isClubAdmin();
    }

    // Rules for public collections
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin() || isClubAdmin();
    }
    
     match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin() || isClubAdmin();
    }
  }
}
