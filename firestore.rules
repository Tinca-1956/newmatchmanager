rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'Club Admin' && userDoc.primaryClubId == clubId;
    }

    match /users/{userId} {
      // Allow users to read/update their own profile
      // Allow other authenticated users to GET a user's profile (needed for storage rules)
      allow get: if request.auth != null;
      allow list: if isSiteAdmin();
      allow read, update: if request.auth.uid == userId || isSiteAdmin();
      allow create: if request.auth != null;
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create, update: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow create, update: if isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/series/$(seriesId)).data.clubId);
    }

    match /matches/{matchId} {
      allow read: if request.auth != null;
      // Allow create/update if user is a site admin or a club admin for the match's club
      allow create, update: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    match /results/{resultId} {
      allow read: if request.auth != null;
      // Allow create/update if user is site/club admin or a designated marshal
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
  }
}
