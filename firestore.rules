rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow a user to read their own document
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      // Allow admins to update user profiles
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    // Allow users to query the 'users' collection if they are querying for their own club.
    // This rule is what enables the Members page to work.
    match /users/{userId} {
       allow list: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.primaryClubId;
    }
    
    // CLUBS
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    // SERIES
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow create, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    // MATCHES
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    // RESULTS
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow create, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin', 'Marshal'];
    }
  }
}