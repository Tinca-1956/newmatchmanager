
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin of a specific club
    function isClubAdmin(clubId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }
    
    // Helper function to check if a user is a site admin
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    // Anyone can read from public collections
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if false; // Only backend can write
    }
    
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Only backend can write
    }

    // All authenticated users can read their own user document
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      // Allow creation for new users
      allow create: if request.auth != null;
      // Allow updates only by the user themselves, or a site admin.
      // Club Admins can update roles/status of users in their own club.
      allow update: if request.auth.uid == userId || isSiteAdmin() || 
                       (isClubAdmin(resource.data.primaryClubId) && request.resource.data.role != 'Site Admin');
      // Only Site Admins can delete user documents
      allow delete: if isSiteAdmin();
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      // Only site admins can create, update, or delete clubs
      allow write: if isSiteAdmin();
    }

    match /series/{seriesId} {
      // Any authenticated user can read series data.
      allow read: if request.auth != null;
      // Only admins of the specific club can write to it.
      allow write: if isClubAdmin(request.resource.data.clubId) || isSiteAdmin();
    }

    match /matches/{matchId} {
      // Any authenticated user can read match data
      allow read: if request.auth != null;
      // Allow registered users to update the registeredAnglers list to add themselves
      allow update: if (isSiteAdmin() || isClubAdmin(resource.data.clubId)) || 
                       (request.auth.uid in request.resource.data.registeredAnglers && !(request.auth.uid in resource.data.registeredAnglers)) ||
                       (!(request.auth.uid in request.resource.data.registeredAnglers) && request.auth.uid in resource.data.registeredAnglers);
      // Only admins of the specific club can create or delete matches
      allow create, delete: if isClubAdmin(request.resource.data.clubId) || isSiteAdmin();
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
      // Marshals and Admins can write results
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Marshal', 'Club Admin', 'Site Admin'];
    }

  }
}
