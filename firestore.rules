rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSiteAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null &&
        (userDoc.role == 'Club Admin' && userDoc.primaryClubId == clubId) || isSiteAdmin();
    }
    
    function isClubMember(clubId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null && userDoc.primaryClubId == clubId || isSiteAdmin();
    }

    // Collection rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isSiteAdmin();
    }
    
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if isClubAdmin(clubId) || isSiteAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow write: if isClubAdmin(resource.data.clubId) || isSiteAdmin();
    }
    
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create: if isClubAdmin(request.resource.data.clubId);
      allow update: if (isClubAdmin(resource.data.clubId)) || 
                      (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']));
      allow delete: if isClubAdmin(resource.data.clubId);
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow write: if isClubAdmin(resource.data.clubId) || isSiteAdmin();
    }
    
    match /blogs/{postId} {
      allow read: if request.auth != null;
      allow create, update: if isClubAdmin(request.resource.data.clubId);
      allow delete: if isClubAdmin(resource.data.clubId);
      
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if isClubMember(get(/databases/$(database)/documents/blogs/$(postId)).data.clubId);
      }
    }
    
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // Server-side logic should validate this
      allow delete: if isSiteAdmin();
    }
    
    match /tags/{tagId} {
      allow read: if request.auth != null;
      allow write: if isClubAdmin(resource.data.clubId);
    }
    
     match /helpDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /Standard_Texts/{textId} {
      allow read: if request.auth != null;
      allow write: if isClubAdmin(resource.data.clubId) || isSiteAdmin();
    }

    // Public collections can be read by anyone
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Only backend can write
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Only backend can write
    }
     match /publicBlogPosts/{postId} {
      allow read: if true;
      allow write: if false; // Should be written from a secure environment
    }
  }
}
