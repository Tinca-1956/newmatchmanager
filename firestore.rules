rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }
    
    function isClubAdmin(clubId) {
      return request.auth.token.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isSiteAdmin();
      allow list: if request.auth.uid != null; // Simplified for now
    }

    match /clubs/{clubId} {
      allow read: if request.auth.uid != null;
      allow write: if isSiteAdmin();
    }

    match /matches/{matchId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /series/{seriesId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /results/{resultId} {
        allow read: if request.auth.uid != null;
        allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /applications/{applicationId} {
      allow read, write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
      allow create: if request.auth.uid != null;
    }
  }
}
