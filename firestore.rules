rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the requester is an admin
    function isRequesterAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId; // Anyone can create their own user record
      allow update: if request.auth.uid == userId || isRequesterAdmin();
      allow delete: if isRequesterAdmin(); 
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if isRequesterAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow write: if isRequesterAdmin();
    }

    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create: if isRequesterAdmin();
      // Allow update if user is an admin OR if they are just adding/removing themselves from registeredAnglers
      allow update: if isRequesterAdmin() || (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']));
      allow delete: if isRequesterAdmin();
    }
    
    match /results/{resultId} {
        allow read: if request.auth != null;
        allow write: if isRequesterAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Marshal';
    }
  }
}