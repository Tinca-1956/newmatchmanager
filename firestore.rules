
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isRequesterAuthenticated() {
      return request.auth != null;
    }
    
    function isRequesterAdmin() {
      // Check the user's role by looking up their profile in the users collection.
      // This is the most reliable way to check for admin privileges.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    function isUserRequestingOwnData(userId) {
      return request.auth.uid == userId;
    }

    // CLUBS
    match /clubs/{clubId} {
      allow read: if isRequesterAuthenticated();
      allow write: if isRequesterAdmin();
    }
    
    // SERIES
    match /series/{seriesId} {
      allow read: if isRequesterAuthenticated();
      allow write: if isRequesterAdmin();
    }
    
    // MATCHES
    match /matches/{matchId} {
      allow read: if isRequesterAuthenticated();
      
      // Update: Allow any authenticated user to add themselves to the registeredAnglers array.
      // Admins can modify any other field.
      allow update: if isRequesterAdmin() || 
                    (request.auth.uid in request.resource.data.registeredAnglers &&
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']));
      
      allow create, delete: if isRequesterAdmin();
    }
    
    // RESULTS
    match /results/{resultId} {
        allow read: if isRequesterAuthenticated();
        allow write: if isRequesterAdmin();
    }

    // USERS
    match /users/{userId} {
      allow read: if isRequesterAuthenticated();

      // Create: A user can create their own doc, or an admin can create one.
      allow create: if isUserRequestingOwnData(userId) || isRequesterAdmin();
      
      // Update: A user can update their own doc, or an admin can update any.
      allow update: if isUserRequestingOwnData(userId) || isRequesterAdmin();

      // Delete: Only admins can delete.
      allow delete: if isRequesterAdmin();
    }
  }
}
