
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'Club Admin' && user.primaryClubId == clubId;
    }
    
    function isClubMember(clubId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.primaryClubId == clubId && user.memberStatus == 'Member';
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create: if isSiteAdmin();
      allow update: if isSiteAdmin() || (isClubAdmin(clubId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['description', 'imageUrl']));
      allow delete: if isSiteAdmin();
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSiteAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.primaryClubId;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId || isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId);
      allow delete: if isSiteAdmin();
    }

    match /series/{seriesId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
      allow update: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId) || (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']));
      allow delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    match /results/{resultId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /helpDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin();
    }

    match /storage.rules {
      allow read, write: if false;
    }
    
    match /Standard_Texts/{textId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /tags/{tagId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /blogs/{blogId} {
      allow read: if request.auth != null;
      allow create, update: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
      allow delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);

      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && isClubMember(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
      }
    }
    
    match /publicBlogPosts/{postId} {
        allow read: if true;
        allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /notifications/{notificationId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}
