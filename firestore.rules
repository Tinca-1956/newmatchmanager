rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =============================================
    // Users Collection
    // =============================================
    match /users/{userId} {
      
      // CREATE: Allow any authenticated user to create their own user document.
      allow create: if request.auth != null;

      // READ (GET):
      // 1. A user can read their own profile.
      // 2. A Site Admin can read any user's profile.
      allow get: if request.auth.uid == userId || request.auth.token.role == 'Site Admin';
      
      // READ (LIST):
      // A Site Admin can query the users collection ONLY when filtering for deleted users.
      // This is for a specific admin page and is a narrow, secure scope.
      allow list: if request.auth.token.role == 'Site Admin' && request.query.get('where')[0][1] == 'memberStatus' && request.query.get('where')[0][2] == 'Deleted';

      // UPDATE:
      // 1. A user can update their own document.
      // 2. A Site Admin or Club Admin can update any user document.
      allow update: if request.auth.uid == userId || 
                       request.auth.token.role == 'Site Admin' ||
                       request.auth.token.role == 'Club Admin';

      // DELETE:
      // Only a Site Admin can delete a user document.
      allow delete: if request.auth.token.role == 'Site Admin';
    }

    // =============================================
    // Clubs Collection
    // =============================================
    match /clubs/{clubId} {
      // READ: Any authenticated user can read club information.
      allow read: if request.auth != null;
      
      // WRITE (Create, Update): Only Site Admins can write to the clubs collection.
      allow write: if request.auth.token.role == 'Site Admin';
    }
    
    // =============================================
    // Series Collection
    // =============================================
    match /series/{seriesId} {
        // READ: Any authenticated user can read series info.
        allow read: if request.auth != null;

        // WRITE: Site Admins or Club Admins of the corresponding club can write.
        allow write: if request.auth.token.role == 'Site Admin' ||
                     (request.auth.token.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId);
    }

    // =============================================
    // Matches Collection
    // =============================================
    match /matches/{matchId} {
        // READ: Any authenticated user can read match data.
        allow read: if request.auth != null;

        // WRITE: Site Admins or Club Admins of the corresponding club can write.
        allow write: if request.auth.token.role == 'Site Admin' ||
                     (request.auth.token.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId);
    }
    
    // =============================================
    // Results Collection
    // =============================================
    match /results/{resultId} {
        // READ: Any authenticated user can read results.
        allow read: if request.auth != null;
        
        // WRITE: Site Admins, Club Admins, or Marshals can write to results.
        allow write: if request.auth.token.role == 'Site Admin' || 
                        request.auth.token.role == 'Club Admin' ||
                        request.auth.token.role == 'Marshal';
    }
    
    // =============================================
    // Public-Facing Collections
    // =============================================
    
    // Allow anyone (even unauthenticated users) to read the list of public matches.
    match /publicMatches/{matchId} {
      allow get, list: if true;
    }
    
    // Allow anyone to read the list of upcoming public matches.
    match /publicUpcomingMatches/{matchId} {
      allow get, list: if true;
    }
  }
}
