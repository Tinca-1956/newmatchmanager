rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSiteAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Site Admin';
    }

    function isClubAdmin(userId, clubId) {
      let user = get(/databases/$(database)/documents/users/$(userId)).data;
      return user.role == 'Club Admin' && user.primaryClubId == clubId;
    }

    function isMemberOfClub(userId, clubId) {
       let user = get(/databases/$(database)/documents/users/$(userId)).data;
       return user.primaryClubId == clubId;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow site admins to read/write anything
    match /{document=**} {
      allow read, write: if isSiteAdmin(request.auth.uid);
    }

    // Public read access for specific collections
    match /clubs/{clubId} {
      allow read: if request.auth != null;
    }
     match /series/{seriesId} {
      allow read: if request.auth != null;
    }
    match /publicMatches/{matchId} {
        allow read: if true;
    }
     match /publicUpcomingMatches/{matchId} {
        allow read: if true;
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      // Allow a user to read their own doc, or an admin of the same club to read it.
      allow read: if request.auth.uid == userId ||
                   isClubAdmin(request.auth.uid, get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId);
      allow update: if request.auth.uid == userId || 
                       isClubAdmin(request.auth.uid, resource.data.primaryClubId);
      allow delete: if isSiteAdmin(request.auth.uid);
    }
    
    // Rules for 'matches' collection
    match /matches/{matchId} {
        allow read: if request.auth != null;
        allow write: if isClubAdmin(request.auth.uid, resource.data.clubId);
    }
    
    // Rules for 'results' collection
    match /results/{resultId} {
        allow read: if request.auth != null;
        allow write: if isClubAdmin(request.auth.uid, resource.data.clubId);
    }

     // Rules for 'publicMatches' collection
    match /publicMatches/{matchId} {
      allow write: if isClubAdmin(request.auth.uid, resource.data.clubId);
    }
  }
}
