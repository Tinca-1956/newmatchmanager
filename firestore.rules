rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requesting user is a Site Admin
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    // Helper function to check if the requesting user is a Club Admin
    function isClubAdmin() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }
    
    // Helper function to check if two users are in the same club
    function inSameClub(userId1, userId2) {
      let user1Club = get(/databases/$(database)/documents/users/$(userId1)).data.primaryClubId;
      let user2Club = get(/databases/$(database)/documents/users/$(userId2)).data.primaryClubId;
      return user1Club == user2Club;
    }

    // USERS collection rules
    match /users/{userId} {
      // Anyone authenticated can read any user profile.
      // This is needed to list members in a club.
      allow read: if request.auth.uid != null;
      
      // A user can create their own document.
      allow create: if request.auth.uid == userId;

      // A user can update their own document.
      // A Site Admin can update any user's document.
      // A Club Admin can update a user in the same club.
      allow update: if request.auth.uid == userId || isSiteAdmin() || (isClubAdmin() && inSameClub(request.auth.uid, userId));
    }

    // CLUBS collection rules
    match /clubs/{clubId} {
        // Anyone authenticated can read club data for selection lists.
        allow read: if request.auth.uid != null;
        
        // Only site admins can create, update, or delete clubs.
        allow write: if isSiteAdmin();
    }
  }
}
