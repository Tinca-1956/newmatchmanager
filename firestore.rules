
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isClubMember(clubId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    function isSiteAdmin() {
      // Check for the existence of the user document and role field before accessing.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      if (!exists(/databases/$(database)/documents/users/$(request.auth.uid))) {
        return false;
      }
      let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userData.role == 'Club Admin' && userData.primaryClubId == clubId;
    }
    
    function isClubAdminForResource(resource) {
      let clubId = resource.data.clubId;
      return isClubAdmin(clubId);
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isSiteAdmin();
      allow delete: if isSiteAdmin();
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin();
    }

    match /series/{seriesId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isSiteAdmin() || isClubAdminForResource(resource);
    }

    match /matches/{matchId} {
        allow read: if request.auth != null;
        allow create, delete: if isSiteAdmin() || isClubAdminForResource(resource);
        allow update: if request.auth != null;
    }

    match /results/{resultId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isSiteAdmin() || isClubAdminForResource(resource);
    }
    
    match /Standard_Texts/{textId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isSiteAdmin() || isClubAdminForResource(resource);
    }
    
    match /tags/{tagId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isSiteAdmin() || isClubAdminForResource(resource);
    }

    match /blogs/{blogId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdminForResource(resource);
    }

    match /blogs/{blogId}/comments/{commentId} {
       allow read: if request.auth != null;
       allow create: if request.auth != null;
       allow update, delete: if isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
    }
    
    match /publicBlogPosts/{postId} {
        allow get: if true;
        allow list: if true;
        allow write: if isSiteAdmin() || isClubAdminForResource(resource);
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create, delete: if request.auth != null;
    }

    match /helpDocuments/{docId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isSiteAdmin();
    }

  }
}
