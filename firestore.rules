rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user has an admin role
    function isAppAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Site Admin', 'Club Admin'];
    }

    // CLUBS: Allow any authenticated user to read all clubs.
    // Allow admins to create/update/delete.
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if isAppAdmin();
    }

    // USERS:
    match /users/{userId} {
      // Allow any authenticated user to read any user profile.
      allow read: if request.auth != null;

      // Allow a user to update their own basic details.
      allow update: if request.auth.uid == userId &&
                      request.resource.data.keys().hasAll(['firstName', 'lastName', 'primaryClubId']);
      
      // Allow an admin to update another user's status and role details.
      allow update: if isAppAdmin() &&
                      request.resource.data.keys().hasAll(['firstName', 'lastName', 'role', 'memberStatus']);

      // Admins can create users (though this is done client-side after registration)
      allow create: if isAppAdmin();
    }
  }
}
