rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    function isClubAdmin(clubId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'Club Admin' && user.primaryClubId == clubId;
    }
    
    function isClubMember(clubId) {
       let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
       return user.primaryClubId == clubId;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isSiteAdmin();
    }
    
    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create, write: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
        allow read: if request.auth != null;
        allow create: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
        allow write, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    match /matches/{matchId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null && (isSiteAdmin() || isClubMember(request.query.clubId));
      allow create: if request.auth != null
        && (isSiteAdmin() || isClubAdmin(request.resource.data.clubId));
      allow update, delete: if request.auth != null
      	&& (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow create, write, delete: if request.auth != null && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }

    match /Standard_Texts/{textId} {
        allow read: if request.auth != null;
        allow create: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
        allow update, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /publicMatches/{matchId} {
        allow read: true;
        allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /publicUpcomingMatches/{matchId} {
        allow read: true;
        allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /blogs/{blogId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /blogs/{blogId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberStatus == 'Member';
    }
    
    match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
    
    match /tags/{tagId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    // Rules for Match Reviews
    match /matchReviews/{reviewId} {
      allow read: if request.auth != null;
      // Only admins can create/update/delete reviews. reviewId is the same as matchId.
      allow write: if request.auth != null && (isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/matches/$(reviewId)).data.clubId));
    }

    // Rules for Comments on Reviews
    match /matchReviews/{reviewId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberStatus == 'Member';
    }
  }
}