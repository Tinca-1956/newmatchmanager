
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }
    
    function isClubAdmin() {
      return request.auth.token.role == 'Club Admin';
    }

    function isClubAdminOf(clubId) {
      // Check if the user is a Club Admin and their primaryClubId matches the given clubId
      return isClubAdmin() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }
    
    // User Profiles
    match /users/{userId} {
      // Allow user to read/write their own profile
      allow read, write: if request.auth.uid == userId;
      // Allow admins to manage users
      allow read, update: if isSiteAdmin() || isClubAdminOf(resource.data.primaryClubId);
    }
    
    // The rule for listing users in a collection query.
    match /users/{userId} {
        allow list: if isSiteAdmin();
        allow list: if request.auth.uid != null && 
                       request.query.where.size() == 1 &&
                       request.query.where[0].field == "primaryClubId" &&
                       request.query.where[0].value == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId;
    }

    // Clubs
    match /clubs/{clubId} {
      allow read: if request.auth.uid != null;
      allow create, write: if isSiteAdmin();
    }

    // Series
    match /series/{seriesId} {
        allow read: if request.auth.uid != null; // All authenticated users can read series
        allow create, write, delete: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
    }
    
    // Matches
    match /matches/{matchId} {
      allow read: if request.auth.uid != null;
      allow create, write: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
      
      // Allow any authenticated user to register (update registeredAnglers array)
      allow update: if request.auth.uid != null 
                      && request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['registeredAnglers', 'registeredCount']);
    }

    // Results
    match /results/{resultId} {
        allow read: if request.auth.uid != null;
        allow create, write: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
    }

    // Applications for Club Membership
    match /applications/{applicationId} {
        allow create: if request.auth.uid != null;
        allow read, write, delete: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
    }

    // This is a placeholder for a more robust multi-club membership model
    match /memberships/{membershipId} {
        allow read: if request.auth.uid != null;
        allow create, delete: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
    }
  }
}
