
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isClubAdmin(userId, clubId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Club Admin' &&
             get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId == clubId;
    }

    function isSiteAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Site Admin';
    }
    
    function isRequestingUserClubAdminForResource(resource) {
      return isClubAdmin(request.auth.uid, resource.data.clubId);
    }
    
    function isRequestingUserSiteAdmin() {
      return isSiteAdmin(request.auth.uid);
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isRequestingUserSiteAdmin() || 
                      (isClubAdmin(request.auth.uid, resource.data.primaryClubId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['firstName', 'lastName', 'role', 'memberStatus'])) ||
                      request.auth.uid == userId;
    }

    // Rules for 'clubs' collection
    match /clubs/{clubId} {
      allow read: if isSignedIn();
      allow create, update: if isRequestingUserSiteAdmin();
      allow delete: if false; 
    }

    // Rules for 'series' collection
    match /series/{seriesId} {
      allow read: if isSignedIn();
      allow create, update: if isRequestingUserSiteAdmin() || isRequestingUserClubAdminForResource(resource);
      allow delete: if false;
    }

    // Rules for 'matches' collection
    match /matches/{matchId} {
      allow read: if isSignedIn();
      allow create, update: if isRequestingUserSiteAdmin() || isRequestingUserClubAdminForResource(resource);
      allow delete: if false;
    }
    
    // Rules for 'results' collection
    match /results/{resultId} {
      allow read: if isSignedIn();
      allow create, update: if isRequestingUserSiteAdmin() || isRequestingUserClubAdminForResource(resource);
      allow delete: if false;
    }
  }
}
