
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      // Users can read and update their own profile.
      // Create is allowed for new user registration.
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    match /clubs/{clubId} {
        // Any authenticated user can read the list of clubs.
        allow read: if request.auth.uid != null;
        
        // Site Admins can create new clubs.
        allow create: if request.auth.uid != null && request.auth.token.role == 'Site Admin';
        
        // Admins can update their primary club.
        allow update: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.id;
    }
    
    match /matches/{matchId} {
      // Authenticated users can read/write matches if they are an admin of the club.
      // This is a broad rule for simplicity during development.
      allow read, write: if request.auth.uid != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin' || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId);
    }
    
    match /series/{seriesId} {
      allow read, write: if request.auth.uid != null;
    }
    
    match /results/{resultId} {
      allow read, write: if request.auth.uid != null;
    }

    // Public collections can be read by anyone, but not written to from the client.
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false; 
    }
    
    match /publicUpcomingMatches/{matchId} {
       allow read: if true;
       allow write: if false;
    }
  }
}
