
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin of a specific club
    function isClubAdmin(clubId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }

    // Helper function to check if the user is a Site Admin
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    // Helper function to check if the user is a verified member of a specific club
    function isClubMember(clubId) {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberStatus == 'Member';
    }

    // Users can read/update their own profile. Admins can manage users in their club. Site Admins can manage all.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Allow user creation during sign-up
      allow update: if request.auth.uid == userId 
          || isSiteAdmin() 
          || isClubAdmin(resource.data.primaryClubId);
      allow delete: if isSiteAdmin();
    }

    // Clubs can be read by anyone. Only Site Admins can create/update/delete clubs.
    // Club admins can update their own club's details.
    match /clubs/{clubId} {
      allow read: if true;
      allow create: if isSiteAdmin();
      allow update: if isSiteAdmin() || isClubAdmin(clubId);
      allow delete: if isSiteAdmin();
    }

    // Series can be read by anyone in the club. Admins can manage them.
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    // Matches can be read by anyone in the club. Admins can manage them.
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    // Results can be read by anyone in the club. Admins can manage them.
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /blogs/{blogId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);

      // Comments on blogs
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && isClubMember(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
        allow delete: if isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
      }
    }
    
    // Notifications can only be accessed by the user they are for.
    match /notifications/{notificationId} {
        allow read, update, delete: if request.auth.uid == resource.data.userId;
        allow create: if request.auth != null;
    }

    // This is the key change to fix the "Make Public" button
    match /publicBlogPosts/{postId} {
      allow read: if true;
      allow write: if isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/blogs/$(postId)).data.clubId);
    }
    
    // Public data is read-only for everyone
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /helpDocuments/{docId} {
      allow read: if true;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /Standard_Texts/{textId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
  }
}
