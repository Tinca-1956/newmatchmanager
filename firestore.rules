
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }

    function isClubAdminOf(clubId) {
      // Check if the user's role is 'Club Admin' and if their primary club matches the one they are trying to access.
      return request.auth.token.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    function isMemberOf(clubId) {
      // Check if the user has a membership document for the given clubId.
      // This is a more robust way to check for multi-club membership in the future.
      return exists(/databases/$(database)/documents/memberships/$(request.auth.uid + '_' + clubId));
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth.uid == userId
        // Allow Site Admins to read any user profile
        || isSiteAdmin()
        // Allow Club Admins to read profiles of users in their club
        || (isClubAdminOf(resource.data.primaryClubId));
        
      // Allow users to create their own profile document
      allow create: if request.auth.uid == userId;

      // Allow users to update their own profile, but not change their role.
      allow update: if request.auth.uid == userId && request.resource.data.role == resource.data.role
        // Allow Admins to update user profiles (e.g., change roles)
        || isSiteAdmin() || isClubAdminOf(resource.data.primaryClubId);
    }
    
    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
        // Any authenticated user can read the list of clubs
        allow read: if request.auth.uid != null;
        // Only Site Admins can create, update, or delete clubs
        allow write: if isSiteAdmin();
    }
    
    // Rules for the 'series' collection
    match /series/{seriesId} {
        // Any authenticated user can read series information
        allow read: if request.auth.uid != null;
        // Only Admins of the relevant club can create, update, or delete series
        allow write: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
    }
    
    // Rules for the 'matches' collection
    match /matches/{matchId} {
        // Any authenticated user can read match details
        allow read: if request.auth.uid != null;
        // Only Admins of the relevant club can create or modify matches
        allow write: if isSiteAdmin() || isClubAdminOf(request.resource.data.clubId);
    }

    // Rules for the 'results' collection
    match /results/{resultId} {
      // Anyone can read results.
      allow read: if true;
      // Writing results should be restricted to Admins/Marshals, typically via a secure backend or Cloud Function.
      // For now, only allow admins to write.
      allow write: if isSiteAdmin() || isClubAdminOf(request.resource.data.clubId);
    }
    
    // Rules for the 'applications' collection
    match /applications/{applicationId} {
      // A user can create their own application
      allow create: if request.auth.uid == request.resource.data.userId;
      // Admins of the target club can read and delete applications
      allow read, delete: if isSiteAdmin() || isClubAdminOf(resource.data.clubId);
    }

    // Rules for the 'memberships' collection (for multi-club support)
    match /memberships/{membershipId} {
      // Users can read their own membership documents
      allow read: if request.auth.uid == resource.data.userId
        // Admins can read any membership document for their club
        || isSiteAdmin() || isClubAdminOf(resource.data.clubId);
      // Creating/deleting memberships is an admin-only action
      allow write: if isSiteAdmin() || isClubAdminOf(request.resource.data.clubId);
    }
  }
}
