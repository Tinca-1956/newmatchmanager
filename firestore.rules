
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function userId() {
      return request.auth.uid;
    }
    
    function getUserData(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data;
    }
    
    function isSiteAdmin() {
      return isAuth() && getUserData(userId()).role == 'Site Admin';
    }
    
    function isClubAdmin(clubId) {
      let user = getUserData(userId());
      return isAuth() && user.role == 'Club Admin' && user.primaryClubId == clubId;
    }
    
    function isClubMember(clubId) {
       let user = getUserData(userId());
       return isAuth() && user.primaryClubId == clubId && user.memberStatus == 'Member';
    }
    
    function isAuthor(docId) {
       return isAuth() && resource.data.authorId == userId();
    }
    
    function isCommentAuthor(docId) {
      return isAuth() && get(/databases/$(database)/documents/blogs/{postId}/comments/$(docId)).data.authorId == userId();
    }
    
    // Allow anyone to read public match and blog data
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false; // Should be written from backend/server action
    }

    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin();
    }
    
    match /publicBlogPosts/{postId} {
      allow read: if true;
      allow write: if false; // Should be written from backend/server action
    }

    // Users can manage their own profile. Site admins can manage anyone.
    match /users/{uid} {
      allow read: if isAuth();
      allow create: if isAuth(); // Allow creation during signup process
      allow update: if userId() == uid || isSiteAdmin();
      allow delete: if isSiteAdmin();
    }

    // Clubs can be read by any authenticated user, but only managed by Site Admins.
    // Club Admins can update their own club.
    match /clubs/{clubId} {
      allow read: if isAuth();
      allow create, delete: if isSiteAdmin();
      allow update: if isSiteAdmin() || isClubAdmin(clubId);
    }
    
    // Series can be read by any authenticated user, but only managed by admins of that club.
    match /series/{seriesId} {
      allow read: if isAuth();
      allow create, update, delete: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }
    
    // Tags can only be managed by admins of that club.
    match /tags/{tagId} {
        allow read, write: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Matches can be read by authenticated users, but only managed by admins of that club.
    // Allow any authenticated user to register (update registeredAnglers array).
    match /matches/{matchId} {
      allow read: if isAuth();
      allow create: if isAuth() && (isSiteAdmin() || isClubAdmin(request.resource.data.clubId));
      allow update: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
      allow delete: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }
    
    // Results can be read by authenticated users, but only written by admins of that club.
    match /results/{resultId} {
      allow read: if isAuth();
      allow write: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }

    // Blogs can be read by any authenticated user.
    // Write access is limited to club admins or site admins.
    match /blogs/{postId} {
        allow read: if isAuth();
        allow write: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));

        // Comments can be read by any authenticated user.
        // Creation is limited to club members.
        // Deletion is limited to admins or the author.
        match /comments/{commentId} {
            allow read: if isAuth();
            allow create: if isAuth() && isClubMember(get(/databases/$(database)/documents/blogs/$(postId)).data.clubId);
            allow delete: if isAuth() && (
                isSiteAdmin() || 
                isClubAdmin(get(/databases/$(database)/documents/blogs/$(postId)).data.clubId) ||
                isCommentAuthor(commentId)
            );
        }
    }
    
    match /matchReviews/{reviewId} {
      allow read: if isAuth();
      allow write: if isAuth() && (isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/matches/$(reviewId)).data.clubId));
      
      match /comments/{commentId} {
        allow read: if isAuth();
        allow create: if isAuth(); // Allow any authenticated user to comment on a review
        allow delete: if isAuth() && (isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/matches/$(reviewId)).data.clubId) || request.auth.uid == resource.data.authorId);
      }
    }

    // Notifications are private to the user.
    match /notifications/{notificationId} {
        allow read, write: if isAuth() && resource.data.userId == userId();
    }
    
     // Standard Texts can be read by any authenticated user, but only managed by admins of that club.
    match /Standard_Texts/{textId} {
      allow read: if isAuth();
      allow write: if isAuth() && (isSiteAdmin() || isClubAdmin(resource.data.clubId));
    }
    
     // Help Documents can be read by any authenticated user, but only managed by site admin.
    match /helpDocuments/{docId} {
      allow read: if isAuth();
      allow write: if isSiteAdmin();
    }
  }
}
