rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isSiteAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }
    
    function isClubMember(clubId) {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId
              && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberStatus == 'Member';
    }

    // User Profile Rules
    match /users/{userId} {
      // Users can read their own profile, Admins can read any profile in their club
      allow read: if isSignedIn() && (
                    request.auth.uid == userId 
                    || isSiteAdmin() 
                    || (isClubAdmin(get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId))
                  );
                  
      // Users can create their own profile document
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Users can update their own profile (firstName, lastName, primaryClubId)
      // Admins can update any profile in their club
      allow update: if isSignedIn() && (
                      (request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys.hasOnly(['firstName', 'lastName', 'primaryClubId', 'role', 'memberStatus']))
                      || isSiteAdmin()
                      || isClubAdmin(resource.data.primaryClubId)
                    );
    }
    
    // All users can read all club documents
    match /clubs/{clubId} {
      allow read: if true;
      allow create, update, delete: if isSiteAdmin();
    }
    
    // Series Rules
    match /series/{seriesId} {
        allow read: if isSignedIn();
        allow create, update: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
        allow delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    // Match Rules
    match /matches/{matchId} {
      allow read: if isSignedIn();
      // Allow admins to create/update/delete matches
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
      
      // Allow any signed-in user to register (update registeredAnglers array)
      allow update: if isSignedIn() && request.resource.data.diff(resource.data).affectedKeys.hasOnly(['registeredAnglers', 'registeredCount']);
    }

    // Results Rules
    match /results/{resultId} {
        allow read: if isSignedIn();
        // Only admins can write results
        allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    // Help document rules
     match /helpDocuments/{docId} {
      allow read: if true;
      allow create, update, delete: if isSiteAdmin();
    }
    
    // Allow public read access to published match results
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false; 
    }

    // Allow public read access to upcoming matches
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if false; 
    }
  }
}
