rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin roles.
    function isClubAdminOrSiteAdmin(userId) {
      // Ensure the user document exists and has a role before checking.
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role in ['Club Admin', 'Site Admin'];
    }

    // --- Users Collection ---
    // Any authenticated user can read their own document.
    // An admin can update any user document (e.g., change roles).
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isClubAdminOrSiteAdmin(request.auth.uid);
      allow write: if request.auth.uid == userId || isClubAdminOrSiteAdmin(request.auth.uid);
    }

    // --- Collection Group Queries ---
    // This rule allows an admin to perform queries across the 'users' collection,
    // which is required for modals like "Add Angler", "Remove Angler", etc.
    // THIS IS THE KEY FIX.
    match /users/{document=**} {
       allow list: if isClubAdminOrSiteAdmin(request.auth.uid);
    }

    // --- Other Collections ---
    // Rules for other collections need to be defined here.
    // These are examples based on likely app functionality.

    // Anyone can read club information. Only admins can create/update clubs.
    match /clubs/{clubId} {
      allow read: if true;
      allow write: if isClubAdminOrSiteAdmin(request.auth.uid);
    }

    // Admins can manage series. Anyone can read them.
    match /series/{seriesId} {
      allow read: if true;
      allow write: if isClubAdminOrSiteAdmin(request.auth.uid);
    }

    // Admins can manage matches. Anyone can read them.
    match /matches/{matchId} {
      allow read: if true;
      allow write: if isClubAdminOrSiteAdmin(request.auth.uid);
      // Allow any authenticated user to register/unregister by updating the registeredAnglers array.
      // This is a more specific rule that still allows admins to write all fields.
      allow update: if request.auth != null && 
                       (request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['registeredAnglers', 'registeredCount']));
    }

    // Admins can manage results. Anyone can read them.
    match /results/{resultId} {
      allow read: if true;
      allow write: if isClubAdminOrSiteAdmin(request.auth.uid);
    }
  }
}
