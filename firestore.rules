rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function userHasRole(role) {
      return isAuth() && getUserData().role == role;
    }

    function userIsClubMember(clubId) {
        return isAuth() && getUserData().primaryClubId == clubId;
    }
    
    function userIsClubAdmin(clubId) {
      return userIsClubMember(clubId) && userHasRole('Club Admin');
    }

    function userIsSiteAdmin() {
      return userHasRole('Site Admin');
    }

    // Rules for collections
    match /users/{userId} {
      allow read: if isAuth();
      allow create: if isAuth() && isUser(userId);
      allow update: if isUser(userId) || userIsSiteAdmin() || userIsClubAdmin(getUserData().primaryClubId);
      allow delete: if userIsSiteAdmin();
    }

    match /clubs/{clubId} {
      allow read: if isAuth();
      allow create, delete: if userIsSiteAdmin();
      allow update: if userIsSiteAdmin() || userIsClubAdmin(clubId);
    }
    
    match /series/{seriesId} {
        allow read: if isAuth();
        allow create, update, delete: if userIsSiteAdmin() || userIsClubAdmin(resource.data.clubId);
    }
    
    match /matches/{matchId} {
      allow read: if isAuth();
      allow create, delete: if userIsSiteAdmin() || userIsClubAdmin(request.resource.data.clubId);

      allow update: if (userIsSiteAdmin() || userIsClubAdmin(resource.data.clubId))
                    || (
                      // This block allows an angler to register themselves
                      request.auth.uid != null &&
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']) &&
                      request.resource.data.registeredAnglers == resource.data.registeredAnglers.append(request.auth.uid) &&
                      request.resource.data.registeredCount == resource.data.registeredCount + 1
                    );
    }

    match /results/{resultId} {
      allow read: if isAuth();
      allow create, update, delete: if userIsSiteAdmin() || userIsClubAdmin(request.resource.data.clubId);
    }
    
    match /helpDocuments/{docId} {
      allow read: if isAuth();
      allow create, delete: if userIsSiteAdmin();
    }

    // Public collections are read-only for authenticated users
    match /publicMatches/{matchId} {
        allow read: if isAuth();
        allow write: if false; // Should only be written from backend/admin
    }

    match /publicUpcomingMatches/{matchId} {
        allow read: if isAuth();
        allow write: if false; // Should only be written from backend/admin
    }
  }
}
