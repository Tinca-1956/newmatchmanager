
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Site Admin role
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    // Helper function to check for any Admin role
    function isAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole == 'Site Admin' || userRole == 'Club Admin';
    }
    
    // Helper function to check if a user is a member of a specific club
    function isMemberOf(clubId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isSiteAdmin();
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin();
      allow update: if isAdmin() && isMemberOf(clubId);
    }
    
    match /series/{seriesId} {
      allow read, write: if request.auth != null;
    }

    match /matches/{matchId} {
      allow read, write: if request.auth != null;
    }
    
    match /results/{resultId} {
       allow read, write: if request.auth != null;
    }

    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin();
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin();
    }
    
     match /Standard_Texts/{textId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /helpDocuments/{docId} {
        allow read: if request.auth != null;
        allow write: if isSiteAdmin();
    }
  }
}
