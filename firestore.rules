rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions for checking user roles from their token
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }

    function isClubAdmin() {
      return request.auth.token.role == 'Club Admin';
    }
    
    function isAngler() {
       return request.auth.token.role == 'Angler';
    }

    // Explicitly allow logged-in users to read their own user document.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSiteAdmin() || isClubAdmin();
      
      // Allow admins to perform any write operation.
      // Allow users to create their own record or update their own name/club.
      allow write: if isSiteAdmin() || isClubAdmin()
                   || (request.auth.uid == userId && (
                       (request.resource.data.diff(resource.data).affectedKeys()
                        .hasOnly(['firstName', 'lastName', 'primaryClubId']))
                       ||
                       (request.resource.data.diff(resource.data).affectedKeys()
                        .hasAll(['firstName', 'lastName', 'email', 'role', 'memberStatus', 'primaryClubId']))
                     ));
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin();
    }
    
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin();
      
      // Allow any logged-in user to register/unregister by modifying the registeredAnglers array
      allow update: if request.auth.uid != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']);
    }

    match /results/{resultId} {
      allow read: if request.auth != null;
      allow write: if isSiteAdmin() || isClubAdmin();
    }
  }
}
