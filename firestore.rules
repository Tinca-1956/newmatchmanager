
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAdmin() {
      // Check for role in the user's custom claims
      return request.auth.token.role in ['Site Admin', 'Club Admin'];
    }
    
    function isSiteAdmin() {
        return request.auth.token.role == 'Site Admin';
    }
    
    function isUserStaff() {
        return request.auth.token.role in ['Site Admin', 'Club Admin', 'Marshal'];
    }
    
    // Rule for a single user document
    match /users/{userId} {
      // ANY authenticated user can read their OWN document
      allow get: if isUserAuthenticated() && request.auth.uid == userId;
      
      // Admins can get ANY user document
      allow get: if isUserAuthenticated() && isUserAdmin();

      // ANY authenticated user can update their OWN document
      allow update: if isUserAuthenticated() && request.auth.uid == userId;

      // Admins can update ANY user document
      allow update: if isUserAuthenticated() && isUserAdmin();

      // ANY authenticated user can read the list of members in their club
      allow list: if isUserAuthenticated();
      
      // Only Site Admins can create or delete user documents
      allow create, delete: if isUserAuthenticated() && isSiteAdmin();
    }
    
    match /{document=**} {
      // Default deny all reads and writes
      allow read, write: if false;
    }
  }
}
