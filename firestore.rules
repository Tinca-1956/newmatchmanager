rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check user role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Helper function to check if a user is an admin (Club or Site)
    function isAdmin(userId) {
      let userRole = getUserRole(userId);
      return userRole == 'Site Admin' || userRole == 'Club Admin';
    }

    // Helper function to check if the user is a Site Admin
    function isSiteAdmin(userId) {
      return getUserRole(userId) == 'Site Admin';
    }

    // Unsecured public data for the public dashboard
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users (admins) can publish
    }
    
    match /clubs/{clubId} {
      allow read: if true; // All users can see the list of clubs
      allow write: if isSiteAdmin(request.auth.uid); // Only Site Admins can create/edit clubs
    }

    match /users/{userId} {
      // ANY authenticated user can read the list of users (for member pages, etc.)
      allow read: if request.auth != null;
      // Only an admin OR the user themselves can update a user document
      allow write: if isAdmin(request.auth.uid) || request.auth.uid == userId;
    }

    match /series/{seriesId} {
        allow read: if request.auth != null;
        allow write: if isAdmin(request.auth.uid);
    }

    match /matches/{matchId} {
      // Any authenticated user can read match data
      allow read: if request.auth != null;
      // Any authenticated user can register (update registeredAnglers)
      allow write: if request.auth != null;
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(request.auth.uid);
    }
  }
}
