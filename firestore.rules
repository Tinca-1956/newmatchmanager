rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get a user's role from their document
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Helper function to check if a user is a site admin
    function isSiteAdmin(userId) {
      return getUserRole(userId) == 'Site Admin';
    }

    // Helper function to check if a user is a club admin for a specific club
    function isClubAdmin(userId, clubId) {
        let userDoc = get(/databases/$(database)/documents/users/$(userId)).data;
        return userDoc.role == 'Club Admin' && userDoc.primaryClubId == clubId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to read their own document
      allow get: if request.auth != null;
      // Allow a user to update their own profile (firstName, lastName, primaryClubId)
      allow update: if request.auth.uid == userId;
      // Allow Site Admins to create, read, update, and delete any user
      allow read, write: if request.auth != null && isSiteAdmin(request.auth.uid);
    }
    
    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
        // Anyone authenticated can view clubs
        allow read: if request.auth != null;
        // Only Site Admins can create or delete clubs
        allow create, delete: if request.auth != null && isSiteAdmin(request.auth.uid);
        // Site Admins or Club Admins of that club can update it
        allow update: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, clubId));
    }
    
     // Rules for the 'series' collection
    match /series/{seriesId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && isSiteAdmin(request.auth.uid);
    }
    
    // Rules for the 'matches' collection
    match /matches/{matchId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId));
    }

    // Rules for the 'results' collection
    match /results/{resultId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId));
    }
  }
}
