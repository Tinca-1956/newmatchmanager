rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function getUserPrimaryClubId() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId;
    }

    function isSiteAdmin() {
      return getUserRole() == 'Site Admin';
    }

    function isClubAdmin() {
      return getUserRole() == 'Club Admin';
    }
    
    function isClubMember(clubId) {
        return getUserPrimaryClubId() == clubId;
    }

    function isUpdatingClubMember(clubId) {
        return isClubAdmin() && getUserPrimaryClubId() == clubId;
    }

    function isUpdatingOwnProfile() {
      // User can only update their own firstName, lastName, and primaryClubId
      let R = request.resource.data;
      let D = resource.data;
      return R.diff(D).affectedKeys().hasOnly(['firstName', 'lastName', 'primaryClubId']);
    }

    // PUBLIC COLLECTIONS
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false; // Only written from backend/trusted source
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Only written from backend/trusted source
    }

    match /clubs/{clubId} {
      allow read: if isSignedIn();
      // Only Site Admins can create/delete clubs
      allow create, delete: if isSiteAdmin();
      // Site Admins can update anything. Club Admins of that club can update specific fields.
      allow update: if isSiteAdmin() || 
                     (isClubAdmin() && isClubMember(clubId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['description', 'imageUrl']));
    }
    
    match /series/{seriesId} {
      allow read: if isSignedIn();
      // Only admins of the club can create, update or delete series
      allow write: if isSiteAdmin() || isClubAdmin() && isClubMember(request.resource.data.clubId);
    }
    
    match /matches/{matchId} {
        allow get: if isSignedIn();
        allow list: if isSignedIn();
        // Admins can create, update, and delete matches in their own club
        allow write: if isSiteAdmin() || isClubAdmin() && isClubMember(request.resource.data.clubId);
    }
    
    match /users/{userId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      
      // User can create their own doc. Admins can create users in their own club.
      allow create: if isOwner(userId)
                    || isSiteAdmin()
                    || (isClubAdmin() && isUpdatingClubMember(request.resource.data.primaryClubId));

      // User can update their own profile. Admins can update users in their club.
      allow update: if isOwner(userId) && isUpdatingOwnProfile()
                      || isSiteAdmin()
                      || (isClubAdmin() && isUpdatingClubMember(request.resource.data.primaryClubId));
                      
      // Only Site Admins can delete user documents
      allow delete: if isSiteAdmin();
    }
    
    match /results/{resultId} {
        // Any signed-in user can read any result.
        allow read: if isSignedIn();
        // Only admins can write results
        allow write: if isSiteAdmin() || isClubAdmin();
    }
    
     match /helpDocuments/{docId} {
      allow read: if isSignedIn();
      allow write: if isSiteAdmin();
    }
    
    match /Standard_Texts/{textId} {
      allow read: if isSignedIn();
      allow write: if isSiteAdmin() || (isClubAdmin() && isClubMember(request.resource.data.clubId));
    }
  }
}
