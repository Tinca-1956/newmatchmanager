
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Deny all reads/writes by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow any authenticated user to read from these collections
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /clubs/{clubId} {
       allow read: if request.auth != null;
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    match /series/{seriesId} {
       allow read: if request.auth != null;
       // Write allowed by site admin or club admin of that club
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin'
                    || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin'
                        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId);
    }

    match /matches/{matchId} {
      allow read: if request.auth != null;
       // Write allowed by site admin or club admin of that club
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin'
                    || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin'
                        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId);
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
       // Write allowed by site admin or club admin of that club
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin'
                    || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin');
    }

    // Public collections can be read by anyone, but only written to by authenticated users (via client-side logic)
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if request.auth != null; 
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}
