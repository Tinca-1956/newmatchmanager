rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to get user data from the 'users' collection
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if the authenticated user is a Site Admin
    function isSiteAdmin() {
      return isAuthenticated() && getUserData(request.auth.uid).role == 'Site Admin';
    }

    // Helper function to check if the authenticated user is a Club Admin for a given club
    function isClubAdmin(clubId) {
      let userData = getUserData(request.auth.uid);
      return isAuthenticated() && userData.role == 'Club Admin' && userData.primaryClubId == clubId;
    }
    
    // Helper function to check if the user is a member of a given club
    function isClubMember(clubId) {
       let userData = getUserData(request.auth.uid);
       // Site Admins are de-facto members of all clubs
       return isSiteAdmin() || (isAuthenticated() && userData.primaryClubId == clubId);
    }
    
    // Users can read and update their own profile.
    // Site admins can read/write any user profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSiteAdmin();
      allow create, delete: if isSiteAdmin();
    }

    // Clubs can be read by any authenticated user.
    // Only site admins can create, update, or delete clubs.
    match /clubs/{clubId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isSiteAdmin();
    }
    
    // Series can be read by any authenticated user.
    // Only Site Admins or a Club Admin of that club can create/update/delete a series.
    match /series/{seriesId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    // Matches can be read by authenticated members of that club.
    // Only Site Admins or a Club Admin of that club can create/update/delete matches.
    match /matches/{matchId} {
        allow read: if isClubMember(resource.data.clubId);
        allow create, update, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    // Results can be read by authenticated members of that club.
    // Only Site Admins or a Club Admin of that club can create/update/delete results.
    match /results/{resultId} {
        allow read: if isClubMember(resource.data.clubId);
        allow create, update, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    // Public matches are readable by anyone, but writable only by Site Admins (via backend functions)
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin();
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin();
    }

    // NEW RULE: Help documents can be read by any authenticated user,
    // but only Site Admins can create, update, or delete them.
    match /helpDocuments/{docId} {
      allow read: if isAuthenticated();
      allow write: if isSiteAdmin();
    }
  }
}
