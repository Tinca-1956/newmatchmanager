rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check user's role from their document
    function isUserRole(userId, allowedRoles) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role in allowedRoles;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to create their own document
      allow create: if request.auth != null;

      // Allow a user to read their own document, or if they are an admin
      // Also allow any authenticated user to read other user profiles (for member lists)
      allow read: if request.auth != null;
      
      // Allow a user to update their own document,
      // OR allow a Site Admin or Club Admin to update any user's document
      allow update: if request.auth.uid == userId || isUserRole(request.auth.uid, ['Site Admin', 'Club Admin']);

      // Only allow Site Admins to delete users for now
      allow delete: if isUserRole(request.auth.uid, ['Site Admin']);
    }

    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
      // Any authenticated user can read the list of clubs
      allow read: if request.auth != null;
      
      // Allow Site Admins or Club Admins to create/update/delete clubs
      allow write: if request.auth != null && isUserRole(request.auth.uid, ['Site Admin', 'Club Admin']);
    }
  }
}
