rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSiteAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Site Admin';
    }

    function isClubAdmin(userId, clubId) {
      let userDoc = get(/databases/$(database)/documents/users/$(userId)).data;
      return userDoc.role == 'Club Admin' && userDoc.primaryClubId == clubId;
    }

    // --- PUBLIC-SAFE COLLECTIONS ---
    match /clubs/{clubId} {
        // Anyone can read club info for selection and display.
        allow read;
        // Only Site Admins can create, update, or delete clubs.
        allow write: if request.auth != null && isSiteAdmin(request.auth.uid);
    }

    match /publicMatches/{matchId} {
        // Anyone can read public match results.
        allow read;
        // Writing is handled by a trusted server process (via useMatchActions hook).
        allow write: if false;
    }
    
    match /publicUpcomingMatches/{matchId} {
        // Anyone can read public upcoming match data for the public dashboard.
        allow read;
        // Writing is handled by a trusted server process (via useMatchActions hook).
        allow write: if false;
    }
    
    // --- AUTHENTICATED USER ACCESS ---
    match /users/{userId} {
      // Users can read and write to their own profile.
      allow read, write: if request.auth.uid == userId;

      // Site Admins can read any user profile.
      allow read, write: if isSiteAdmin(request.auth.uid);
      
      // Club Admins can read profiles of users in their club.
      allow read: if isClubAdmin(request.auth.uid, resource.data.primaryClubId);
    }

    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId));
    }

    match /matches/{matchId} {
      allow read: if request.auth != null;
      // Allow create/update/delete by Site/Club Admins.
      allow write: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId));
      
      // Allow a user to register (update) if they are a member of the club.
      // This is a more permissive rule but necessary for the registration logic.
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == resource.data.clubId;
    }
    
    match /results/{resultId} {
        allow read: if request.auth != null;
        // Site Admins, or Club Admins of the club where the result was recorded can write.
        allow write: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId));
    }
    
    match /helpDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isSiteAdmin(request.auth.uid);
    }
    
    match /Standard_Texts/{textId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && (isSiteAdmin(request.auth.uid) || isClubAdmin(request.auth.uid, resource.data.clubId));
    }
  }
}
