
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }
    
    function isClubAdmin(clubId) {
      return request.auth.token.role == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }
    
    function isMarshal(clubId) {
        return request.auth.token.role == 'Marshal' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    // Unsecured for now
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin();
    }
    
    // Unsecured for now
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if isSiteAdmin();
    }

    match /clubs/{clubId} {
      allow read: if request.auth.uid != null;
      allow create: if isSiteAdmin();
      allow update: if isSiteAdmin() || isClubAdmin(clubId);
      allow delete: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
        allow read: if request.auth.uid != null;
        allow write: if isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/series/$(seriesId)).data.clubId);
    }

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      allow list: if isSiteAdmin();
      
      match /applications/{applicationId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /matches/{matchId} {
      // Authenticated users can read matches. More specific rules can be added if needed.
      allow read: if request.auth.uid != null;
      // Allow write if user is Site Admin or a Club Admin for the match's club
      allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /results/{resultId} {
        allow read: if request.auth.uid != null;
        // Marshals, Club Admins, and Site Admins can write results
        allow write: if isSiteAdmin() || isClubAdmin(get(/databases/$(database)/documents/results/$(resultId)).data.clubId) || isMarshal(get(/databases/$(database)/documents/results/$(resultId)).data.clubId);
    }
  }
}
