rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is a site or club admin for a specific club
    function isAdmin(clubId) {
      // User is a site admin OR they are a club admin of the requested club
      return request.auth.token.role == 'Site Admin' || 
             (request.auth.token.role == 'Club Admin' && getUserData().primaryClubId == clubId);
    }

    // Helper function to get the requesting user's data from the users collection
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    match /users/{userId} {
      // Allow users to read/write their own document
      allow read, write: if request.auth.uid == userId;

      // Allow admins to read/update any user document
      allow update, get: if request.auth.token.role in ['Site Admin', 'Club Admin'];

      // Allow logged-in users to list other users, but only if they are querying for users
      // within their own primary club. This is crucial for the Members page to work.
      allow list: if request.auth != null && request.query.where.primaryClubId == getUserData().primaryClubId;
    }

    match /clubs/{clubId} {
      // Anyone logged in can read club info (for club selection, etc.)
      allow read: if request.auth != null;
      // Only site admins can create, update, or delete clubs
      allow create, update, delete: if request.auth.token.role == 'Site Admin';
    }

    match /series/{seriesId} {
      // Logged-in users can read series info
      allow read: if request.auth != null;
      // Admins of the series' club can create/update/delete it
      allow create, update, delete: if isAdmin(resource.data.clubId);
    }
    
    match /matches/{matchId} {
      // Allow logged-in users to read match details
      allow read: if request.auth != null;

      // Allow admins of the match's club to create/update it
      allow create, update: if isAdmin(resource.data.clubId) || isAdmin(request.resource.data.clubId);
      
      // Allow any logged-in user to register (update registeredAnglers array)
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']);
    }

    match /results/{resultId} {
      // Logged-in users can read results
      allow read: if request.auth != null;
      // Admins or Marshals can write results
      allow write: if request.auth.token.role in ['Site Admin', 'Club Admin', 'Marshal'];
    }
    
    match /publicMatches/{matchId} {
        // Anyone can read this collection, even unauthenticated users
    	allow read: if true;
      // Only authenticated users (admins, via the publish function) can write
      allow write: if request.auth != null;
    }
  }
}
