
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    function isClubAdmin(clubId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'Club Admin' && user.primaryClubId == clubId;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // PUBLIC collections are read-only for everyone
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false;
    }

    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if false;
    }

    // MAIN APP collections
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // For registration and first-time club selection
      allow update: if isOwner(userId) || isSiteAdmin();
      allow delete: if isSiteAdmin(); // Only Site Admins can delete users
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow create: if isSiteAdmin();
      // Club Admins can only edit specific fields of their own club
      allow update: if isSiteAdmin() || 
                    (isClubAdmin(clubId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['description', 'imageUrl']));
      allow delete: if isSiteAdmin(); // Only Site Admins can delete clubs
    }

    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
      // Writing/deleting results is tied to being an admin of the club the result belongs to
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
  }
}
