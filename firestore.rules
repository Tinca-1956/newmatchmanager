rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isSiteAdmin() {
      return request.auth.token.role == 'Site Admin';
    }

    function isClubAdmin(clubId) {
      return request.auth.token.role == 'Club Admin' && getUserData().primaryClubId == clubId;
    }

    // Rules for Collections
    match /users/{userId} {
      // Allow users to read and update their own profile.
      // Site admins can read/write any user profile.
      allow read, update: if request.auth.uid == userId || isSiteAdmin();
      // Allow authenticated users to create their own user document.
      allow create: if isAuth();
      // Site admins can delete users (soft delete is preferred).
      allow delete: if isSiteAdmin();
    }

    match /clubs/{clubId} {
      // Any authenticated user can read the list of clubs.
      allow read: if isAuth();
      // Only Site Admins can create, update, or delete clubs.
      allow write: if isSiteAdmin();
    }

    match /series/{seriesId} {
       // Authenticated users can read series information.
      allow read: if isAuth();
      // Only admins of the club can write to its series.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /matches/{matchId} {
      // Authenticated users can read match information.
      allow read: if isAuth();
      // Only admins of the club can write to its matches.
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /results/{resultId} {
       // Authenticated users can read results.
       allow read: if isAuth();
       // Only admins of the club can write results.
       allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
  }
}
