
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    
    function isSiteAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    function isClubAdmin() {
       return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read: if isUserAuthenticated();
      
      // A user can update their own profile's non-critical fields
      allow update: if request.auth.uid == userId &&
                      request.resource.data.diff(resource.data).affectedKeys()
                        .hasOnly(['firstName', 'lastName', 'primaryClubId']);

      // Admins can update more fields on other users' documents
      allow update: if (isSiteAdmin() || isClubAdmin()) &&
                      request.resource.data.diff(resource.data).affectedKeys()
                        .hasOnly(['firstName', 'lastName', 'role', 'memberStatus']);
    }

    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
      allow read: if isUserAuthenticated();
      allow create: if isUserAuthenticated(); // Allow any authenticated user to create a club
      
      // Only Site Admins can update or delete clubs
      allow update: if isSiteAdmin();
      allow delete: if isSiteAdmin();
    }
  }
}

    