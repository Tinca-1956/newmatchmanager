
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin roles from the auth token
    function isAdmin() {
      return request.auth.token.role in ['Site Admin', 'Club Admin'];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to read and update their own document
      allow read, update: if request.auth.uid == userId;

      // Admins can read any user document
      allow get: if isAdmin();
      
      // Admins can list all users
      allow list: if isAdmin();
    }

    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
      // Any authenticated user can read clubs
      allow read: if request.auth != null;

      // Only Site Admins can create, update, or delete clubs
      allow write: if request.auth.token.role == 'Site Admin';
    }

    // Rules for the 'series' collection
    match /series/{seriesId} {
        // Any authenticated user can read series
        allow read: if request.auth != null;
        
        // Admins can create and update series
        allow create, update: if isAdmin();
    }

    // Rules for the 'matches' collection
    match /matches/{matchId} {
        // Any authenticated user can read matches
        allow read: if request.auth != null;

        // Any authenticated user can register by updating the registeredAnglers array
        allow update: if request.auth != null && 
                        request.resource.data.keys().hasAll(['registeredAnglers', 'registeredCount']) &&
                        request.resource.data.diff(request.resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']);
        
        // Admins can create and perform full updates on matches
        allow create: if isAdmin();
        allow update: if isAdmin(); // Broad update permission for admins
    }

    // Rules for the 'results' collection
    match /results/{resultId} {
        // Any authenticated user can read results
        allow read: if request.auth != null;

        // Admins can write results
        allow write: if isAdmin();
    }
  }
}
