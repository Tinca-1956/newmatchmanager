rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles and permissions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isClubAdmin(clubId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
    }

    function isSiteAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    function isClubMember(clubId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if request.auth.uid == userId 
          || isSiteAdmin()
          || isClubAdmin(resource.data.primaryClubId); // Club admin can update users in their club
      allow delete: if isSiteAdmin();
    }
    
    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
        allow read: if isAuthenticated();
        allow write: if isSiteAdmin() || isClubAdmin(clubId);
    }
    
    // Rules for the 'series' collection
    match /series/{seriesId} {
        allow read: if isClubMember(resource.data.clubId);
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    // Rules for the 'matches' collection
    match /matches/{matchId} {
      allow read: if isAuthenticated();
      allow create: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
      allow update: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
      allow delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    // Rules for the 'results' collection
    match /results/{resultId} {
      allow read: if isAuthenticated();
      allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }

    // Rules for the 'blogs' collection
    match /blogs/{blogId} {
      allow read: if isAuthenticated() && isClubMember(resource.data.clubId);
      allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);

      // Rules for the 'comments' subcollection
      match /comments/{commentId} {
        allow read: if isAuthenticated() && isClubMember(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
        allow create: if isAuthenticated() && isClubMember(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId);
        allow delete: if isSiteAdmin() 
            || isClubAdmin(get(/databases/$(database)/documents/blogs/$(blogId)).data.clubId)
            || request.auth.uid == resource.data.authorId;
      }
    }
    
    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
        allow read, update, delete: if request.auth.uid == resource.data.userId;
        allow create: if isAuthenticated();
    }

    // Rules for public collections
    match /publicBlogPosts/{postId} {
      allow read: if true;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }

    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
    match /Standard_Texts/{textId} {
      allow read: if isAuthenticated();
      allow write: if isSiteAdmin() || isClubAdmin(request.resource.data.clubId);
    }
    
     match /helpDocuments/{docId} {
      allow read: if isAuthenticated();
      allow write: if isSiteAdmin();
    }
    
  }
}