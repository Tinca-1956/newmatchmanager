
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions based on user roles and context
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isSiteAdmin() {
      return isSignedIn() && getUserData().role == 'Site Admin';
    }

    function isClubAdmin() {
      return isSignedIn() && getUserData().role == 'Club Admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // A user belongs to a club if their primaryClubId matches.
    function isUserInClub(clubId) {
        return isSignedIn() && getUserData().primaryClubId == clubId;
    }

    // --- Rules for each collection ---

    // CLUBS: Public can read, only Site Admins can create/write.
    match /clubs/{clubId} {
      allow read: if true;
      allow create, update, delete: if isSiteAdmin();
    }

    // USERS: 
    // - Read: You can read your own profile, or if you are an admin.
    //         Or if you are in the same club. This allows contact page to work.
    // - Create: Any signed-in user can create their own user document.
    // - Update: You can only update your own user document.
    match /users/{userId} {
      allow read: if isOwner(userId) 
                  || isSiteAdmin() 
                  || (isSignedIn() && isUserInClub(resource.data.primaryClubId));
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isSiteAdmin();
      allow delete: if isSiteAdmin();
    }
    
    // SERIES: Admins can manage series within their own club.
    match /series/{seriesId} {
        allow read, write: if isSiteAdmin() || isUserInClub(resource.data.clubId);
    }

    // MATCHES:
    // - Read: Any signed-in user can read match details.
    // - Create/Delete: Only Admins of that club can create/delete.
    // - Update: 
    //   - Admins can update anything.
    //   - Any logged-in user can update a match ONLY to add/remove themselves from 'registeredAnglers' array.
    match /matches/{matchId} {
      allow read: if isSignedIn();
      allow create, delete: if isSiteAdmin() || isUserInClub(request.resource.data.clubId);
      allow update: if (isSiteAdmin() || isUserInClub(resource.data.clubId))
                    || (isSignedIn() 
                        && request.resource.data.diff(resource.data).affectedKeys()
                           .hasOnly(['registeredAnglers', 'registeredCount']));
    }

    // RESULTS:
    // - Read: Any signed-in user can read results.
    // - Write: Admins can write results for their club.
    match /results/{resultId} {
      allow read: if isSignedIn();
      allow write: if isSiteAdmin() || isUserInClub(request.resource.data.clubId);
    }

    // STANDARD TEXTS: Admins can manage texts for their club.
    match /Standard_Texts/{textId} {
       allow read, write: if isSiteAdmin() || isUserInClub(request.resource.data.clubId);
    }

    // HELP DOCS: Public can read, site admins can write.
    match /helpDocuments/{docId} {
        allow read: if true;
        allow write: if isSiteAdmin();
    }
    
    // PUBLIC COLLECTIONS: Read-only for everyone.
    match /publicMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Should only be written by backend/admin function
    }
    
    match /publicUpcomingMatches/{matchId} {
        allow read: if true;
        allow write: if false; // Should only be written by backend/admin function
    }

  }
}
