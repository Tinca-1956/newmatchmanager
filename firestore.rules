rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isSiteAdmin() {
      return isUserAuthenticated() && getUserRole(request.auth.uid) == 'Site Admin';
    }

    function isClubAdmin(clubId) {
       return isUserAuthenticated() && getUserRole(request.auth.uid) == 'Club Admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryClubId == clubId;
    }

    match /clubs/{clubId} {
      allow read: if isUserAuthenticated();
      allow write: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /matches/{matchId} {
      allow read: if isUserAuthenticated();
      allow create, update: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
      allow delete: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /results/{resultId} {
        allow read: if isUserAuthenticated();
        allow write: if isSiteAdmin() || isClubAdmin(resource.data.clubId);
    }
    
    match /users/{userId} {
      allow read: if isUserAuthenticated();
      allow write: if request.auth.uid == userId || request.auth.token.role in ['Site Admin', 'Club Admin'];
    }
  }
}
