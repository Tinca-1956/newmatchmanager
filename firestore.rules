
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read-only access to clubs for the public dashboard dropdown.
    match /clubs/{clubId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }
    
    // PUBLIC-FACING DATA: Anyone can read this data.
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can publish.
    }
    
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if request.auth != null; // Only authenticated users can write.
    }

    match /users/{userId} {
      // Allow any authenticated user to read from the users collection.
      // Page-level queries will restrict this to specific clubs.
      allow read: if request.auth != null;
      
      // Allow users to create their own profile document.
      // Updates are restricted based on role.
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId 
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin'
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin';
        
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin';
    }

    match /matches/{matchId} {
      allow read, write: if request.auth != null && 
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Marshal'
        );
      
      // Allow any authenticated user to read a single match document.
      // This is for things like the dashboard and profile pages.
      allow get: if request.auth != null;
      
      // Allow any authenticated user to update the registeredAnglers array (register/unregister).
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']);
    }

    match /series/{seriesId} {
       allow read, write: if request.auth != null && 
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin'
        );
    }

    match /results/{resultId} {
      allow read, write: if request.auth != null && 
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Site Admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Club Admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Marshal'
        );
        
       // Allow any authenticated user to read results.
       allow get: if request.auth != null;
    }
  }
}
