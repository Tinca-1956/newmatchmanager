rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // PUBLIC-FACING collections can be read by anyone, but not written to.
    match /publicMatches/{matchId} {
      allow read: if true;
      allow write: if false;
    }
    match /publicUpcomingMatches/{matchId} {
      allow read: if true;
      allow write: if false;
    }

    // AUTHENTICATED collections require a signed-in user.
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /users/{userId} {
      // Allow a user to read their own document.
      allow get: if request.auth.uid == userId;

      // Allow a user to update their own profile information.
      allow update: if request.auth.uid == userId;
      
      // Allow Site Admins or Club Admins to read user data for their club.
      allow list: if request.auth.uid != null &&
                      (getUserData().role == 'Site Admin' ||
                       (getUserData().role == 'Club Admin' && getUserData().primaryClubId == resource.data.primaryClubId));

      // Allow Site Admins or Club Admins to update user data for their club.
      allow update: if request.auth.uid != null &&
                      (getUserData().role == 'Site Admin' ||
                       (getUserData().role == 'Club Admin' && getUserData().primaryClubId == resource.data.primaryClubId));
                       
      // Only Site Admins can create or delete users.
      allow create, delete: if request.auth.uid != null && getUserData().role == 'Site Admin';
    }

    match /clubs/{clubId} {
        // Anyone can read club data.
        allow read: if true;
        
        // Only Site Admins can create clubs.
        allow create: if request.auth.uid != null && getUserData().role == 'Site Admin';

        // Site Admins can update any club.
        // Club Admins can update their own club.
        allow update: if request.auth.uid != null &&
                        (getUserData().role == 'Site Admin' ||
                         (getUserData().role == 'Club Admin' && getUserData().primaryClubId == resource.id));
                         
        // Only Site Admins can delete clubs.
        allow delete: if request.auth.uid != null && getUserData().role == 'Site Admin';
    }

    match /series/{seriesId} {
      // Allow read if user is a member of the club.
      allow read: if request.auth.uid != null;
      
      // Allow create/update/delete if user is a Club Admin or Site Admin for that club.
      allow write: if request.auth.uid != null &&
                    (getUserData().role == 'Site Admin' || 
                     (getUserData().role == 'Club Admin' && getUserData().primaryClubId == request.resource.data.clubId));
    }
    
    match /matches/{matchId} {
        // Allow read if user is a member of the club.
        allow read: if request.auth.uid != null;
        
        // Allow users to register (update) if they are a member of the club.
        allow update: if request.auth.uid != null && getUserData().memberStatus == 'Member';

        // Allow create/delete if user is a Club Admin or Site Admin for that club.
        allow create, delete: if request.auth.uid != null &&
                        (getUserData().role == 'Site Admin' ||
                         (getUserData().role == 'Club Admin' && getUserData().primaryClubId == request.resource.data.clubId));
    }

    match /results/{resultId} {
      // Allow read if user is a member of the club.
      allow read: if request.auth.uid != null;
      
      // Allow write if user is a Club Admin or Site Admin for that club.
      allow write: if request.auth.uid != null &&
                    (getUserData().role == 'Site Admin' || 
                     (getUserData().role == 'Club Admin' && getUserData().primaryClubId == request.resource.data.clubId));
    }

    match /helpDocuments/{docId} {
        allow read: if true;
        allow write: if request.auth.uid != null && getUserData().role == 'Site Admin';
    }
  }
}