
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Reusable Helper Functions ---

    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isClubOrSiteAdmin(userId) {
      let userRole = getUserData(userId).role;
      return userRole == 'Club Admin' || userRole == 'Site Admin';
    }

    function isMemberOfClub(userId, clubId) {
      return getUserData(userId).primaryClubId == clubId;
    }

    // --- Collection Rules ---

    // Users can read/update their own profile. Admins can manage users in their club.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow list, create, delete: if isClubOrSiteAdmin(request.auth.uid);
    }
    
    // Clubs can be read by any signed-in user, but only written by Site Admins.
    match /clubs/{clubId} {
      allow read: if isSignedIn();
      allow write: if isClubOrSiteAdmin(request.auth.uid);
    }

    // Series can be read by members of that club, but only written by admins of that club.
    match /series/{seriesId} {
      allow read: if isSignedIn() && isMemberOfClub(request.auth.uid, resource.data.clubId);
      allow write: if isClubOrSiteAdmin(request.auth.uid) && isMemberOfClub(request.auth.uid, resource.data.clubId);
    }

    // Matches can be read by club members, but only written by admins of that club.
    // Specific fields like 'registeredAnglers' are updatable by members for registration.
    match /matches/{matchId} {
      allow read: if isSignedIn() && isMemberOfClub(request.auth.uid, resource.data.clubId);
      allow create, delete: if isClubOrSiteAdmin(request.auth.uid) && isMemberOfClub(request.auth.uid, resource.data.clubId);
      allow update: if (isClubOrSiteAdmin(request.auth.uid) && isMemberOfClub(request.auth.uid, resource.data.clubId))
                      || (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']));
    }

    // Results can be read by club members, but only written by admins of that club.
    match /results/{resultId} {
        allow read: if isSignedIn() && isMemberOfClub(request.auth.uid, resource.data.clubId);
        allow write: if isClubOrSiteAdmin(request.auth.uid) && isMemberOfClub(request.auth.uid, resource.data.clubId);
    }

    // Blogs and their comments can be read by club members.
    // Creation/writing is restricted to Club or Site Admins.
    match /blogs/{postId} {
      allow read: if isSignedIn() && isMemberOfClub(request.auth.uid, resource.data.clubId);
      allow write: if isClubOrSiteAdmin(request.auth.uid) && isMemberOfClub(request.auth.uid, resource.data.clubId);

      match /comments/{commentId} {
        allow read, create: if isSignedIn() && isMemberOfClub(request.auth.uid, get(/databases/$(database)/documents/blogs/$(postId)).data.clubId);
        allow delete, update: if isClubOrSiteAdmin(request.auth.uid);
      }
    }
    
    // Notifications are private to each user.
    match /notifications/{notificationId} {
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // --- Public Collections ---
    
    // Public blog posts are readable by anyone, writable only by admins.
    match /publicBlogPosts/{postId} {
      allow read: if true;
      allow write: if isClubOrSiteAdmin(request.auth.uid);
    }
    
    // Public matches (completed) are readable by anyone, writable only by admins.
    match /publicMatches/{matchId} {
       allow read: if true;
       allow write: if isClubOrSiteAdmin(request.auth.uid);
    }
    
    // Public upcoming matches are readable by anyone, writable only by admins.
    match /publicUpcomingMatches/{matchId} {
       allow read: if true;
       allow write: if isClubOrSiteAdmin(request.auth.uid);
    }

    // Standard texts can be read by club members, written by admins
    match /Standard_Texts/{textId} {
       allow read: if isSignedIn() && isMemberOfClub(request.auth.uid, resource.data.clubId);
       allow write: if isClubOrSiteAdmin(request.auth.uid) && isMemberOfClub(request.auth.uid, resource.data.clubId);
    }
    
     // Help documents can be read by anyone, written by admins
    match /helpDocuments/{docId} {
       allow read: if true;
       allow write: if isClubOrSiteAdmin(request.auth.uid);
    }
    
     // Match reviews can be read by club members, written by admins. Comments can be created by members.
    match /matchReviews/{reviewId} {
        allow read: if isSignedIn(); // Assume if you have the ID, you can read it.
        allow write: if isClubOrSiteAdmin(request.auth.uid);

        match /comments/{commentId} {
            allow read, create: if isSignedIn();
            allow delete, update: if isClubOrSiteAdmin(request.auth.uid);
        }
    }
  }
}
