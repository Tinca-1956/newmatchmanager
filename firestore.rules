rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isClubAdmin(clubId) {
        let userRole = getUserData().role;
        return userRole == 'Club Admin' && getUserData().primaryClubId == clubId;
    }

    function isSiteAdmin() {
        return getUserData().role == 'Site Admin';
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isOwner(userId) || isClubAdmin(resource.data.primaryClubId) || isSiteAdmin();
    }
    
    match /clubs/{clubId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isSiteAdmin();
    }
    
    match /series/{seriesId} {
      allow read: if isSignedIn() && getUserData().primaryClubId == get(/databases/$(database)/documents/series/$(seriesId)).data.clubId;
      allow write: if isSignedIn() && (isClubAdmin(request.resource.data.clubId) || isSiteAdmin());
    }

    match /matches/{matchId} {
        allow read: if isSignedIn();

        allow create: if isSignedIn() && (isClubAdmin(request.resource.data.clubId) || isSiteAdmin());

        allow update: if isSignedIn() && (
            isClubAdmin(request.resource.data.clubId) ||
            isSiteAdmin() ||
            (
                // Allow user to register (add themselves)
                request.resource.data.diff(resource).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']) &&
                request.resource.data.registeredAnglers == resource.data.registeredAnglers.concat([request.auth.uid]) &&
                request.resource.data.registeredCount == resource.data.registeredCount + 1
            ) ||
            (
                // Allow user to un-register (remove themselves)
                request.resource.data.diff(resource).affectedKeys().hasOnly(['registeredAnglers', 'registeredCount']) &&
                request.resource.data.registeredAnglers == resource.data.registeredAnglers.remove(request.auth.uid) &&
                request.resource.data.registeredCount == resource.data.registeredCount - 1
            )
        );
    }
  }
}
