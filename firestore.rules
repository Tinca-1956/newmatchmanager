
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read any user's profile.
      allow read: if isSignedIn();
      
      // A user can create their own user document.
      allow create: if isSignedIn() && request.auth.uid == userId;
      
      // A user can only update their own document.
      // Admins cannot update other users from the client. This will need to be handled by a Cloud Function for security.
      allow update: if isSignedIn() && request.auth.uid == userId;

      // Only Site Admins can delete users (for now, this is a placeholder as client-side delete is disabled).
      allow delete: if false; 
    }

    // Rules for the 'clubs' collection
    match /clubs/{clubId} {
      // Any authenticated user can read club information.
      allow read: if isSignedIn();
      // Writing/updating clubs is restricted and should be handled by an admin interface/functions.
      allow write: if false;
    }

    // Rules for the 'series' collection
    match /series/{seriesId} {
       // Any authenticated user can read series information.
      allow read: if isSignedIn();
      // Allow any authenticated user to write. THIS IS A TEMPORARY, PERMISSIVE RULE.
      allow write: if isSignedIn();
    }
    
    // Rules for the 'matches' collection
    match /matches/{matchId} {
       // Any authenticated user can read match information.
      allow read: if isSignedIn();
      // Allow any authenticated user to write. THIS IS A TEMPORARY, PERMISSIVE RULE.
      allow write: if isSignedIn();
    }
    
    // Rules for the 'results' collection
    match /results/{resultId} {
       // Any authenticated user can read results.
      allow read: if isSignedIn();
       // Allow any authenticated user to write. THIS IS A TEMPORARY, PERMISSIVE RULE.
      allow write: if isSignedIn();
    }
    
     // Rules for the 'publicMatches' collection
    match /publicMatches/{matchId} {
        // Allow public read access
        allow get: if true;
        allow list: if true;
        // Disallow all writes from the client
        allow write: if false;
    }

    // Rules for the 'publicUpcomingMatches' collection
    match /publicUpcomingMatches/{matchId} {
        // Allow public read access
        allow get: if true;
        allow list: if true;
        // Disallow all writes from the client
        allow write: if false;
    }
     // Rules for the 'helpDocuments' collection
    match /helpDocuments/{docId} {
        // Allow any authenticated user to read
        allow read: if isSignedIn();
        // Allow any authenticated user to write (create, delete) for now
        allow write: if isSignedIn();
    }
  }
}
