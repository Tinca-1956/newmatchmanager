
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role in ['Site Admin', 'Club Admin'];
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null && isAdmin(request.auth.uid);
      allow create: if request.auth != null;
    }

    match /clubs/{clubId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    match /series/{seriesId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /matches/{matchId} {
      allow read: if request.auth != null;
      
      function isMatchAdmin(userId, matchId) {
        let matchClubId = get(/databases/$(database)/documents/matches/$(matchId)).data.clubId;
        let userRole = get(/databases/$(database)/documents/users/$(userId)).data.role;
        let userPrimaryClubId = get(/databases/$(database)/documents/users/$(userId)).data.primaryClubId;
        
        return (userRole == 'Site Admin') || (userRole == 'Club Admin' && userPrimaryClubId == matchClubId) || (userRole == 'Marshal' && userPrimaryClubId == matchClubId);
      }

      allow write: if request.auth != null && (isAdmin(request.auth.uid) || isMatchAdmin(request.auth.uid, matchId));
    }
    
    match /results/{resultId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
